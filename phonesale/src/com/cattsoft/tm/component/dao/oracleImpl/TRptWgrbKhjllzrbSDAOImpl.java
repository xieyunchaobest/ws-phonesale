package com.cattsoft.tm.component.dao.oracleImpl;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.List;import java.util.ArrayList;import org.apache.log4j.Logger;import com.cattsoft.pub.connection.ConnectionFactory;import com.cattsoft.tm.component.dao.ITRptWgrbKhjllzrbSDAO;import com.cattsoft.tm.vo.TRptWgrbKhjllzrbSVO;import com.cattsoft.pub.util.JdbcUtil;import com.cattsoft.pub.dao.Sql;import com.cattsoft.pub.exception.AppException;import com.cattsoft.pub.exception.SysException;import com.cattsoft.pub.vo.GenericVO;import com.cattsoft.pub.util.StringUtil; /**   * 方法TRptWgrbKhjllzrbSDAOImpl   * <p>Company: 大唐软件</p>   * @author ：白小亮。   * @version 1.1  2007-9-23  */public class TRptWgrbKhjllzrbSDAOImpl implements ITRptWgrbKhjllzrbSDAO{    private static Logger log = Logger.getLogger(TRptWgrbKhjllzrbSDAOImpl.class);    private static final String UNABLE_STS = "P";  /**   * 增加。   * @return String  */ public void add(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRptWgrbKhjllzrbSVO tRptWgrbKhjllzrb=(TRptWgrbKhjllzrbSVO) vo;      Connection conn = null;      PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO T_RPT_WGRB_KHJLLZRB(CREATE_DATE,GH_DTFZ,GH_DYLJC,GH_DYLJFZ,KD_DTFZ,KD_DYLJC,KD_DYLJFZ,KHJL_XM,OPEN_DATE,RH_2G_DTFZ,RH_2G_DYLJFZ,RH_3G_DTFZ,RH_3G_DYLJFZ,WG_CODE,WG_MC)");sql.append(" VALUES (:createDate,:ghDtfz,:ghDyljc,:ghDyljfz,:kdDtfz,:kdDyljc,:kdDyljfz,:khjlXm,:openDate,:rh2gDtfz,:rh2gDyljfz,:rh3gDtfz,:rh3gDyljfz,:wgCode,:wgMc)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());   if (tRptWgrbKhjllzrb.getCreateDate() == null) {      sql.setNullDate("createDate");     } else {    sql.setTimestamp("createDate", tRptWgrbKhjllzrb.getCreateDate());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getGhDtfz())) {      sql.setNullLong("ghDtfz");     } else {    sql.setLong("ghDtfz", tRptWgrbKhjllzrb.getGhDtfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getGhDyljc())) {      sql.setNullLong("ghDyljc");     } else {    sql.setLong("ghDyljc", tRptWgrbKhjllzrb.getGhDyljc());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getGhDyljfz())) {      sql.setNullLong("ghDyljfz");     } else {    sql.setLong("ghDyljfz", tRptWgrbKhjllzrb.getGhDyljfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKdDtfz())) {      sql.setNullLong("kdDtfz");     } else {    sql.setLong("kdDtfz", tRptWgrbKhjllzrb.getKdDtfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKdDyljc())) {      sql.setNullLong("kdDyljc");     } else {    sql.setLong("kdDyljc", tRptWgrbKhjllzrb.getKdDyljc());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKdDyljfz())) {      sql.setNullLong("kdDyljfz");     } else {    sql.setLong("kdDyljfz", tRptWgrbKhjllzrb.getKdDyljfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKhjlXm())) {      sql.setNullString("khjlXm");     } else {    sql.setString("khjlXm", tRptWgrbKhjllzrb.getKhjlXm());    }    if (tRptWgrbKhjllzrb.getOpenDate() == null) {      sql.setNullDate("openDate");     } else {    sql.setTimestamp("openDate", tRptWgrbKhjllzrb.getOpenDate());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh2gDtfz())) {      sql.setNullLong("rh2gDtfz");     } else {    sql.setLong("rh2gDtfz", tRptWgrbKhjllzrb.getRh2gDtfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh2gDyljfz())) {      sql.setNullLong("rh2gDyljfz");     } else {    sql.setLong("rh2gDyljfz", tRptWgrbKhjllzrb.getRh2gDyljfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh3gDtfz())) {      sql.setNullLong("rh3gDtfz");     } else {    sql.setLong("rh3gDtfz", tRptWgrbKhjllzrb.getRh3gDtfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh3gDyljfz())) {      sql.setNullLong("rh3gDyljfz");     } else {    sql.setLong("rh3gDyljfz", tRptWgrbKhjllzrb.getRh3gDyljfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getWgCode())) {      sql.setNullString("wgCode");     } else {    sql.setString("wgCode", tRptWgrbKhjllzrb.getWgCode());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getWgMc())) {      sql.setNullString("wgMc");     } else {    sql.setString("wgMc", tRptWgrbKhjllzrb.getWgMc());    }            sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 主键查询的SQL。   * @return String ： 主键查询的SQL。  */ public GenericVO findByPK(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRptWgrbKhjllzrbSVO tRptWgrbKhjllzrb=(TRptWgrbKhjllzrbSVO) vo;       Sql sql = new Sql("SELECT CREATE_DATE,GH_DTFZ,GH_DYLJC,GH_DYLJFZ,KD_DTFZ,KD_DYLJC,KD_DYLJFZ,KHJL_XM,OPEN_DATE,RH_2G_DTFZ,RH_2G_DYLJFZ,RH_3G_DTFZ,RH_3G_DYLJFZ,WG_CODE,WG_MC FROM T_RPT_WGRB_KHJLLZRB WHERE 1=1  ");      Connection conn = null;      PreparedStatement ps = null;      ResultSet rs = null;      tRptWgrbKhjllzrb =null;      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();            while (rs.next()) {           tRptWgrbKhjllzrb = new TRptWgrbKhjllzrbSVO();           tRptWgrbKhjllzrb.setCreateDate(rs.getTimestamp("CREATE_DATE"));           tRptWgrbKhjllzrb.setGhDtfz(rs.getString("GH_DTFZ"));           tRptWgrbKhjllzrb.setGhDyljc(rs.getString("GH_DYLJC"));           tRptWgrbKhjllzrb.setGhDyljfz(rs.getString("GH_DYLJFZ"));           tRptWgrbKhjllzrb.setKdDtfz(rs.getString("KD_DTFZ"));           tRptWgrbKhjllzrb.setKdDyljc(rs.getString("KD_DYLJC"));           tRptWgrbKhjllzrb.setKdDyljfz(rs.getString("KD_DYLJFZ"));           tRptWgrbKhjllzrb.setKhjlXm(rs.getString("KHJL_XM"));           tRptWgrbKhjllzrb.setOpenDate(rs.getTimestamp("OPEN_DATE"));           tRptWgrbKhjllzrb.setRh2gDtfz(rs.getString("RH_2G_DTFZ"));           tRptWgrbKhjllzrb.setRh2gDyljfz(rs.getString("RH_2G_DYLJFZ"));           tRptWgrbKhjllzrb.setRh3gDtfz(rs.getString("RH_3G_DTFZ"));           tRptWgrbKhjllzrb.setRh3gDyljfz(rs.getString("RH_3G_DYLJFZ"));           tRptWgrbKhjllzrb.setWgCode(rs.getString("WG_CODE"));           tRptWgrbKhjllzrb.setWgMc(rs.getString("WG_MC"));                 }           } catch (SQLException se) {             throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(rs,ps);           }           return tRptWgrbKhjllzrb;         } /**   * 批量查询的SQL。   * @return String ： 批量查询的SQL。  */ public List findByVO(GenericVO vo) throws AppException, SysException{         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       TRptWgrbKhjllzrbSVO tRptWgrbKhjllzrb=(TRptWgrbKhjllzrbSVO) vo;          List res = new ArrayList();          Connection conn = null;          PreparedStatement ps = null;          ResultSet rs = null;          Sql sql = new Sql("SELECT CREATE_DATE,GH_DTFZ,GH_DYLJC,GH_DYLJFZ,KD_DTFZ,KD_DYLJC,KD_DYLJFZ,KHJL_XM,OPEN_DATE,RH_2G_DTFZ,RH_2G_DYLJFZ,RH_3G_DTFZ,RH_3G_DYLJFZ,WG_CODE,WG_MC FROM T_RPT_WGRB_KHJLLZRB WHERE 1=1 ");     try {if (tRptWgrbKhjllzrb.getFlagCreateDate() == 1) {      if (tRptWgrbKhjllzrb.getCreateDate() == null) {             sql.append(" and CREATE_DATE is null ");          }      else{             sql.append(" and CREATE_DATE=:createDate");             sql.setTimestamp("createDate", tRptWgrbKhjllzrb.getCreateDate());          }   } if (tRptWgrbKhjllzrb.getFlagGhDtfz() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getGhDtfz())) {             sql.append(" and GH_DTFZ is null ");          }      else{             sql.append(" and GH_DTFZ=:ghDtfz");             sql.setLong("ghDtfz", tRptWgrbKhjllzrb.getGhDtfz());          }   } if (tRptWgrbKhjllzrb.getFlagGhDyljc() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getGhDyljc())) {             sql.append(" and GH_DYLJC is null ");          }      else{             sql.append(" and GH_DYLJC=:ghDyljc");             sql.setLong("ghDyljc", tRptWgrbKhjllzrb.getGhDyljc());          }   } if (tRptWgrbKhjllzrb.getFlagGhDyljfz() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getGhDyljfz())) {             sql.append(" and GH_DYLJFZ is null ");          }      else{             sql.append(" and GH_DYLJFZ=:ghDyljfz");             sql.setLong("ghDyljfz", tRptWgrbKhjllzrb.getGhDyljfz());          }   } if (tRptWgrbKhjllzrb.getFlagKdDtfz() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKdDtfz())) {             sql.append(" and KD_DTFZ is null ");          }      else{             sql.append(" and KD_DTFZ=:kdDtfz");             sql.setLong("kdDtfz", tRptWgrbKhjllzrb.getKdDtfz());          }   } if (tRptWgrbKhjllzrb.getFlagKdDyljc() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKdDyljc())) {             sql.append(" and KD_DYLJC is null ");          }      else{             sql.append(" and KD_DYLJC=:kdDyljc");             sql.setLong("kdDyljc", tRptWgrbKhjllzrb.getKdDyljc());          }   } if (tRptWgrbKhjllzrb.getFlagKdDyljfz() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKdDyljfz())) {             sql.append(" and KD_DYLJFZ is null ");          }      else{             sql.append(" and KD_DYLJFZ=:kdDyljfz");             sql.setLong("kdDyljfz", tRptWgrbKhjllzrb.getKdDyljfz());          }   } if (tRptWgrbKhjllzrb.getFlagKhjlXm() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKhjlXm())) {             sql.append(" and KHJL_XM is null ");          }      else{             sql.append(" and KHJL_XM=:khjlXm");             sql.setString("khjlXm", tRptWgrbKhjllzrb.getKhjlXm());          }   } if (tRptWgrbKhjllzrb.getFlagOpenDate() == 1) {      if (tRptWgrbKhjllzrb.getOpenDate() == null) {             sql.append(" and OPEN_DATE is null ");          }      else{             sql.append(" and OPEN_DATE=:openDate");             sql.setTimestamp("openDate", tRptWgrbKhjllzrb.getOpenDate());          }   } if (tRptWgrbKhjllzrb.getFlagRh2gDtfz() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh2gDtfz())) {             sql.append(" and RH_2G_DTFZ is null ");          }      else{             sql.append(" and RH_2G_DTFZ=:rh2gDtfz");             sql.setLong("rh2gDtfz", tRptWgrbKhjllzrb.getRh2gDtfz());          }   } if (tRptWgrbKhjllzrb.getFlagRh2gDyljfz() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh2gDyljfz())) {             sql.append(" and RH_2G_DYLJFZ is null ");          }      else{             sql.append(" and RH_2G_DYLJFZ=:rh2gDyljfz");             sql.setLong("rh2gDyljfz", tRptWgrbKhjllzrb.getRh2gDyljfz());          }   } if (tRptWgrbKhjllzrb.getFlagRh3gDtfz() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh3gDtfz())) {             sql.append(" and RH_3G_DTFZ is null ");          }      else{             sql.append(" and RH_3G_DTFZ=:rh3gDtfz");             sql.setLong("rh3gDtfz", tRptWgrbKhjllzrb.getRh3gDtfz());          }   } if (tRptWgrbKhjllzrb.getFlagRh3gDyljfz() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh3gDyljfz())) {             sql.append(" and RH_3G_DYLJFZ is null ");          }      else{             sql.append(" and RH_3G_DYLJFZ=:rh3gDyljfz");             sql.setLong("rh3gDyljfz", tRptWgrbKhjllzrb.getRh3gDyljfz());          }   } if (tRptWgrbKhjllzrb.getFlagWgCode() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getWgCode())) {             sql.append(" and WG_CODE is null ");          }      else{             sql.append(" and WG_CODE=:wgCode");             sql.setString("wgCode", tRptWgrbKhjllzrb.getWgCode());          }   } if (tRptWgrbKhjllzrb.getFlagWgMc() == 1) {      if (StringUtil.isBlank(tRptWgrbKhjllzrb.getWgMc())) {             sql.append(" and WG_MC is null ");          }      else{             sql.append(" and WG_MC=:wgMc");             sql.setString("wgMc", tRptWgrbKhjllzrb.getWgMc());          }   }            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();                    while (rs.next()) {           tRptWgrbKhjllzrb = new TRptWgrbKhjllzrbSVO();           tRptWgrbKhjllzrb.setCreateDate(rs.getTimestamp("CREATE_DATE"));           tRptWgrbKhjllzrb.setGhDtfz(rs.getString("GH_DTFZ"));           tRptWgrbKhjllzrb.setGhDyljc(rs.getString("GH_DYLJC"));           tRptWgrbKhjllzrb.setGhDyljfz(rs.getString("GH_DYLJFZ"));           tRptWgrbKhjllzrb.setKdDtfz(rs.getString("KD_DTFZ"));           tRptWgrbKhjllzrb.setKdDyljc(rs.getString("KD_DYLJC"));           tRptWgrbKhjllzrb.setKdDyljfz(rs.getString("KD_DYLJFZ"));           tRptWgrbKhjllzrb.setKhjlXm(rs.getString("KHJL_XM"));           tRptWgrbKhjllzrb.setOpenDate(rs.getTimestamp("OPEN_DATE"));           tRptWgrbKhjllzrb.setRh2gDtfz(rs.getString("RH_2G_DTFZ"));           tRptWgrbKhjllzrb.setRh2gDyljfz(rs.getString("RH_2G_DYLJFZ"));           tRptWgrbKhjllzrb.setRh3gDtfz(rs.getString("RH_3G_DTFZ"));           tRptWgrbKhjllzrb.setRh3gDyljfz(rs.getString("RH_3G_DYLJFZ"));           tRptWgrbKhjllzrb.setWgCode(rs.getString("WG_CODE"));           tRptWgrbKhjllzrb.setWgMc(rs.getString("WG_MC"));               res.add(tRptWgrbKhjllzrb);                            }          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(rs,ps);               }                         if(0 == res.size()) res = null;          return res;   } /**   * 更新的SQL。   * @return String ： 更新的SQL。  */ public void update(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       TRptWgrbKhjllzrbSVO tRptWgrbKhjllzrb=(TRptWgrbKhjllzrbSVO) vo;          Connection conn = null;          PreparedStatement ps = null;          Sql sql = new Sql("UPDATE T_RPT_WGRB_KHJLLZRB SET ");     try {if (tRptWgrbKhjllzrb.getFlagCreateDate() == 1) {sql.append("CREATE_DATE=:createDate,"); sql.setTimestamp("createDate", tRptWgrbKhjllzrb.getCreateDate()); } if (tRptWgrbKhjllzrb.getFlagGhDtfz() == 1) {sql.append("GH_DTFZ=:ghDtfz,");sql.setLong("ghDtfz", tRptWgrbKhjllzrb.getGhDtfz()); } if (tRptWgrbKhjllzrb.getFlagGhDyljc() == 1) {sql.append("GH_DYLJC=:ghDyljc,");sql.setLong("ghDyljc", tRptWgrbKhjllzrb.getGhDyljc()); } if (tRptWgrbKhjllzrb.getFlagGhDyljfz() == 1) {sql.append("GH_DYLJFZ=:ghDyljfz,");sql.setLong("ghDyljfz", tRptWgrbKhjllzrb.getGhDyljfz()); } if (tRptWgrbKhjllzrb.getFlagKdDtfz() == 1) {sql.append("KD_DTFZ=:kdDtfz,");sql.setLong("kdDtfz", tRptWgrbKhjllzrb.getKdDtfz()); } if (tRptWgrbKhjllzrb.getFlagKdDyljc() == 1) {sql.append("KD_DYLJC=:kdDyljc,");sql.setLong("kdDyljc", tRptWgrbKhjllzrb.getKdDyljc()); } if (tRptWgrbKhjllzrb.getFlagKdDyljfz() == 1) {sql.append("KD_DYLJFZ=:kdDyljfz,");sql.setLong("kdDyljfz", tRptWgrbKhjllzrb.getKdDyljfz()); } if (tRptWgrbKhjllzrb.getFlagKhjlXm() == 1) {sql.append("KHJL_XM=:khjlXm,"); sql.setString("khjlXm", tRptWgrbKhjllzrb.getKhjlXm()); } if (tRptWgrbKhjllzrb.getFlagOpenDate() == 1) {sql.append("OPEN_DATE=:openDate,"); sql.setTimestamp("openDate", tRptWgrbKhjllzrb.getOpenDate()); } if (tRptWgrbKhjllzrb.getFlagRh2gDtfz() == 1) {sql.append("RH_2G_DTFZ=:rh2gDtfz,");sql.setLong("rh2gDtfz", tRptWgrbKhjllzrb.getRh2gDtfz()); } if (tRptWgrbKhjllzrb.getFlagRh2gDyljfz() == 1) {sql.append("RH_2G_DYLJFZ=:rh2gDyljfz,");sql.setLong("rh2gDyljfz", tRptWgrbKhjllzrb.getRh2gDyljfz()); } if (tRptWgrbKhjllzrb.getFlagRh3gDtfz() == 1) {sql.append("RH_3G_DTFZ=:rh3gDtfz,");sql.setLong("rh3gDtfz", tRptWgrbKhjllzrb.getRh3gDtfz()); } if (tRptWgrbKhjllzrb.getFlagRh3gDyljfz() == 1) {sql.append("RH_3G_DYLJFZ=:rh3gDyljfz,");sql.setLong("rh3gDyljfz", tRptWgrbKhjllzrb.getRh3gDyljfz()); } if (tRptWgrbKhjllzrb.getFlagWgCode() == 1) {sql.append("WG_CODE=:wgCode,"); sql.setString("wgCode", tRptWgrbKhjllzrb.getWgCode()); } if (tRptWgrbKhjllzrb.getFlagWgMc() == 1) {sql.append("WG_MC=:wgMc,"); sql.setString("wgMc", tRptWgrbKhjllzrb.getWgMc()); }            	sql.removeSuffix(1); sql.append(" WHERE 1=1 ");           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();                    } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(ps);               }                  } /**   * 批量增加记录。   * @return String ： 批量增加的SQL。  */ public void addBat(List list)throws AppException, SysException {     if (list == null) {     throw new AppException("100001", "缺少DAO操作对象！");           }          Connection conn = null;          PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO T_RPT_WGRB_KHJLLZRB(CREATE_DATE,GH_DTFZ,GH_DYLJC,GH_DYLJFZ,KD_DTFZ,KD_DYLJC,KD_DYLJFZ,KHJL_XM,OPEN_DATE,RH_2G_DTFZ,RH_2G_DYLJFZ,RH_3G_DTFZ,RH_3G_DYLJFZ,WG_CODE,WG_MC)");sql.append(" VALUES (:createDate,:ghDtfz,:ghDyljc,:ghDyljfz,:kdDtfz,:kdDyljc,:kdDyljfz,:khjlXm,:openDate,:rh2gDtfz,:rh2gDyljfz,:rh3gDtfz,:rh3gDyljfz,:wgCode,:wgMc)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());    for(int i=0;i<list.size();i++){       TRptWgrbKhjllzrbSVO tRptWgrbKhjllzrb=(TRptWgrbKhjllzrbSVO) list.get(i);         if (tRptWgrbKhjllzrb== null) {         throw new AppException("100001", "缺少DAO操作对象！");       }   if (tRptWgrbKhjllzrb.getCreateDate() == null) {      sql.setNullDate("createDate");     } else {    sql.setTimestamp("createDate", tRptWgrbKhjllzrb.getCreateDate());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getGhDtfz())) {      sql.setNullLong("ghDtfz");     } else {    sql.setLong("ghDtfz", tRptWgrbKhjllzrb.getGhDtfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getGhDyljc())) {      sql.setNullLong("ghDyljc");     } else {    sql.setLong("ghDyljc", tRptWgrbKhjllzrb.getGhDyljc());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getGhDyljfz())) {      sql.setNullLong("ghDyljfz");     } else {    sql.setLong("ghDyljfz", tRptWgrbKhjllzrb.getGhDyljfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKdDtfz())) {      sql.setNullLong("kdDtfz");     } else {    sql.setLong("kdDtfz", tRptWgrbKhjllzrb.getKdDtfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKdDyljc())) {      sql.setNullLong("kdDyljc");     } else {    sql.setLong("kdDyljc", tRptWgrbKhjllzrb.getKdDyljc());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKdDyljfz())) {      sql.setNullLong("kdDyljfz");     } else {    sql.setLong("kdDyljfz", tRptWgrbKhjllzrb.getKdDyljfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getKhjlXm())) {      sql.setNullString("khjlXm");     } else {    sql.setString("khjlXm", tRptWgrbKhjllzrb.getKhjlXm());    }    if (tRptWgrbKhjllzrb.getOpenDate() == null) {      sql.setNullDate("openDate");     } else {    sql.setTimestamp("openDate", tRptWgrbKhjllzrb.getOpenDate());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh2gDtfz())) {      sql.setNullLong("rh2gDtfz");     } else {    sql.setLong("rh2gDtfz", tRptWgrbKhjllzrb.getRh2gDtfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh2gDyljfz())) {      sql.setNullLong("rh2gDyljfz");     } else {    sql.setLong("rh2gDyljfz", tRptWgrbKhjllzrb.getRh2gDyljfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh3gDtfz())) {      sql.setNullLong("rh3gDtfz");     } else {    sql.setLong("rh3gDtfz", tRptWgrbKhjllzrb.getRh3gDtfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getRh3gDyljfz())) {      sql.setNullLong("rh3gDyljfz");     } else {    sql.setLong("rh3gDyljfz", tRptWgrbKhjllzrb.getRh3gDyljfz());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getWgCode())) {      sql.setNullString("wgCode");     } else {    sql.setString("wgCode", tRptWgrbKhjllzrb.getWgCode());    }       if (StringUtil.isBlank(tRptWgrbKhjllzrb.getWgMc())) {      sql.setNullString("wgMc");     } else {    sql.setString("wgMc", tRptWgrbKhjllzrb.getWgMc());    }            sql.fillParams(ps);           sql.log(this.getClass());           sql.clearParameters();           ps.addBatch();           }                  ps.executeBatch();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 根据传入参数删除一条或者一批记录。   * @return String ： 删除的SQL。  */ public void delete(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRptWgrbKhjllzrbSVO tRptWgrbKhjllzrb=(TRptWgrbKhjllzrbSVO) vo;          Connection conn = null;          PreparedStatement ps = null;       Sql sql = new Sql("DELETE FROM T_RPT_WGRB_KHJLLZRB WHERE 1=1  ");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();            } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(ps);           }         } /**   * 注销一条或者一批   * @return String ： 注销一条或者一批的SQL。  */ public void unable(GenericVO vo)throws AppException, SysException {     TRptWgrbKhjllzrbSVO tRptWgrbKhjllzrb=(TRptWgrbKhjllzrbSVO) vo;       }}
