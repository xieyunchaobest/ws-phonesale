package com.cattsoft.tm.component.dao.oracleImpl;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.List;import java.util.ArrayList;import org.apache.log4j.Logger;import com.cattsoft.pub.connection.ConnectionFactory;import com.cattsoft.tm.component.dao.ITRpgWgrbZdywlzrbSDAO;import com.cattsoft.tm.vo.TRpgWgrbZdywlzrbSVO;import com.cattsoft.pub.util.JdbcUtil;import com.cattsoft.pub.dao.Sql;import com.cattsoft.pub.exception.AppException;import com.cattsoft.pub.exception.SysException;import com.cattsoft.pub.vo.GenericVO;import com.cattsoft.pub.util.StringUtil; /**   * 方法TRpgWgrbZdywlzrbSDAOImpl   * <p>Company: 大唐软件</p>   * @author ：白小亮。   * @version 1.1  2007-9-23  */public class TRpgWgrbZdywlzrbSDAOImpl implements ITRpgWgrbZdywlzrbSDAO{    private static Logger log = Logger.getLogger(TRpgWgrbZdywlzrbSDAOImpl.class);    private static final String UNABLE_STS = "P";  /**   * 增加。   * @return String  */ public void add(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRpgWgrbZdywlzrbSVO tRpgWgrbZdywlzrb=(TRpgWgrbZdywlzrbSVO) vo;      Connection conn = null;      PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO T_RPG_WGRB_ZDYWLZRB(CREATE_DATE,KD_DYLJ,KD_RFZ,KD_SYTQLJ,KD_ZZS,OCS3G_DYLJ,OCS3G_RFZ,OCS3G_SYTQLJ,OCS3G_ZZS,OPEN_DATE,PT2G_DYLJ,PT2G_RFZ,PT2G_SYTQLJ,PT2G_ZZS,PT3G_DYLJ,PT3G_RFZ,PT3G_SYTQLJ,PT3G_ZZS,WG_CODE,WG_MC)");sql.append(" VALUES (:createDate,:kdDylj,:kdRfz,:kdSytqlj,:kdZzs,:ocs3gDylj,:ocs3gRfz,:ocs3gSytqlj,:ocs3gZzs,:openDate,:pt2gDylj,:pt2gRfz,:pt2gSytqlj,:pt2gZzs,:pt3gDylj,:pt3gRfz,:pt3gSytqlj,:pt3gZzs,:wgCode,:wgMc)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());   if (tRpgWgrbZdywlzrb.getCreateDate() == null) {      sql.setNullDate("createDate");     } else {    sql.setTimestamp("createDate", tRpgWgrbZdywlzrb.getCreateDate());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdDylj())) {      sql.setNullLong("kdDylj");     } else {    sql.setLong("kdDylj", tRpgWgrbZdywlzrb.getKdDylj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdRfz())) {      sql.setNullLong("kdRfz");     } else {    sql.setLong("kdRfz", tRpgWgrbZdywlzrb.getKdRfz());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdSytqlj())) {      sql.setNullLong("kdSytqlj");     } else {    sql.setLong("kdSytqlj", tRpgWgrbZdywlzrb.getKdSytqlj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdZzs())) {      sql.setNullLong("kdZzs");     } else {    sql.setLong("kdZzs", tRpgWgrbZdywlzrb.getKdZzs());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gDylj())) {      sql.setNullLong("ocs3gDylj");     } else {    sql.setLong("ocs3gDylj", tRpgWgrbZdywlzrb.getOcs3gDylj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gRfz())) {      sql.setNullLong("ocs3gRfz");     } else {    sql.setLong("ocs3gRfz", tRpgWgrbZdywlzrb.getOcs3gRfz());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gSytqlj())) {      sql.setNullLong("ocs3gSytqlj");     } else {    sql.setLong("ocs3gSytqlj", tRpgWgrbZdywlzrb.getOcs3gSytqlj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gZzs())) {      sql.setNullLong("ocs3gZzs");     } else {    sql.setLong("ocs3gZzs", tRpgWgrbZdywlzrb.getOcs3gZzs());    }    if (tRpgWgrbZdywlzrb.getOpenDate() == null) {      sql.setNullDate("openDate");     } else {    sql.setTimestamp("openDate", tRpgWgrbZdywlzrb.getOpenDate());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gDylj())) {      sql.setNullLong("pt2gDylj");     } else {    sql.setLong("pt2gDylj", tRpgWgrbZdywlzrb.getPt2gDylj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gRfz())) {      sql.setNullLong("pt2gRfz");     } else {    sql.setLong("pt2gRfz", tRpgWgrbZdywlzrb.getPt2gRfz());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gSytqlj())) {      sql.setNullLong("pt2gSytqlj");     } else {    sql.setLong("pt2gSytqlj", tRpgWgrbZdywlzrb.getPt2gSytqlj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gZzs())) {      sql.setNullLong("pt2gZzs");     } else {    sql.setLong("pt2gZzs", tRpgWgrbZdywlzrb.getPt2gZzs());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gDylj())) {      sql.setNullLong("pt3gDylj");     } else {    sql.setLong("pt3gDylj", tRpgWgrbZdywlzrb.getPt3gDylj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gRfz())) {      sql.setNullLong("pt3gRfz");     } else {    sql.setLong("pt3gRfz", tRpgWgrbZdywlzrb.getPt3gRfz());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gSytqlj())) {      sql.setNullLong("pt3gSytqlj");     } else {    sql.setLong("pt3gSytqlj", tRpgWgrbZdywlzrb.getPt3gSytqlj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gZzs())) {      sql.setNullLong("pt3gZzs");     } else {    sql.setLong("pt3gZzs", tRpgWgrbZdywlzrb.getPt3gZzs());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getWgCode())) {      sql.setNullString("wgCode");     } else {    sql.setString("wgCode", tRpgWgrbZdywlzrb.getWgCode());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getWgMc())) {      sql.setNullString("wgMc");     } else {    sql.setString("wgMc", tRpgWgrbZdywlzrb.getWgMc());    }            sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 主键查询的SQL。   * @return String ： 主键查询的SQL。  */ public GenericVO findByPK(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRpgWgrbZdywlzrbSVO tRpgWgrbZdywlzrb=(TRpgWgrbZdywlzrbSVO) vo;       Sql sql = new Sql("SELECT CREATE_DATE,KD_DYLJ,KD_RFZ,KD_SYTQLJ,KD_ZZS,OCS3G_DYLJ,OCS3G_RFZ,OCS3G_SYTQLJ,OCS3G_ZZS,OPEN_DATE,PT2G_DYLJ,PT2G_RFZ,PT2G_SYTQLJ,PT2G_ZZS,PT3G_DYLJ,PT3G_RFZ,PT3G_SYTQLJ,PT3G_ZZS,WG_CODE,WG_MC FROM T_RPG_WGRB_ZDYWLZRB WHERE 1=1  ");      Connection conn = null;      PreparedStatement ps = null;      ResultSet rs = null;      tRpgWgrbZdywlzrb =null;      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();            while (rs.next()) {           tRpgWgrbZdywlzrb = new TRpgWgrbZdywlzrbSVO();           tRpgWgrbZdywlzrb.setCreateDate(rs.getTimestamp("CREATE_DATE"));           tRpgWgrbZdywlzrb.setKdDylj(rs.getString("KD_DYLJ"));           tRpgWgrbZdywlzrb.setKdRfz(rs.getString("KD_RFZ"));           tRpgWgrbZdywlzrb.setKdSytqlj(rs.getString("KD_SYTQLJ"));           tRpgWgrbZdywlzrb.setKdZzs(rs.getString("KD_ZZS"));           tRpgWgrbZdywlzrb.setOcs3gDylj(rs.getString("OCS3G_DYLJ"));           tRpgWgrbZdywlzrb.setOcs3gRfz(rs.getString("OCS3G_RFZ"));           tRpgWgrbZdywlzrb.setOcs3gSytqlj(rs.getString("OCS3G_SYTQLJ"));           tRpgWgrbZdywlzrb.setOcs3gZzs(rs.getString("OCS3G_ZZS"));           tRpgWgrbZdywlzrb.setOpenDate(rs.getTimestamp("OPEN_DATE"));           tRpgWgrbZdywlzrb.setPt2gDylj(rs.getString("PT2G_DYLJ"));           tRpgWgrbZdywlzrb.setPt2gRfz(rs.getString("PT2G_RFZ"));           tRpgWgrbZdywlzrb.setPt2gSytqlj(rs.getString("PT2G_SYTQLJ"));           tRpgWgrbZdywlzrb.setPt2gZzs(rs.getString("PT2G_ZZS"));           tRpgWgrbZdywlzrb.setPt3gDylj(rs.getString("PT3G_DYLJ"));           tRpgWgrbZdywlzrb.setPt3gRfz(rs.getString("PT3G_RFZ"));           tRpgWgrbZdywlzrb.setPt3gSytqlj(rs.getString("PT3G_SYTQLJ"));           tRpgWgrbZdywlzrb.setPt3gZzs(rs.getString("PT3G_ZZS"));           tRpgWgrbZdywlzrb.setWgCode(rs.getString("WG_CODE"));           tRpgWgrbZdywlzrb.setWgMc(rs.getString("WG_MC"));                 }           } catch (SQLException se) {             throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(rs,ps);           }           return tRpgWgrbZdywlzrb;         } /**   * 批量查询的SQL。   * @return String ： 批量查询的SQL。  */ public List findByVO(GenericVO vo) throws AppException, SysException{         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       TRpgWgrbZdywlzrbSVO tRpgWgrbZdywlzrb=(TRpgWgrbZdywlzrbSVO) vo;          List res = new ArrayList();          Connection conn = null;          PreparedStatement ps = null;          ResultSet rs = null;          Sql sql = new Sql("SELECT CREATE_DATE,KD_DYLJ,KD_RFZ,KD_SYTQLJ,KD_ZZS,OCS3G_DYLJ,OCS3G_RFZ,OCS3G_SYTQLJ,OCS3G_ZZS,OPEN_DATE,PT2G_DYLJ,PT2G_RFZ,PT2G_SYTQLJ,PT2G_ZZS,PT3G_DYLJ,PT3G_RFZ,PT3G_SYTQLJ,PT3G_ZZS,WG_CODE,WG_MC FROM T_RPG_WGRB_ZDYWLZRB WHERE 1=1 ");     try {if (tRpgWgrbZdywlzrb.getFlagCreateDate() == 1) {      if (tRpgWgrbZdywlzrb.getCreateDate() == null) {             sql.append(" and CREATE_DATE is null ");          }      else{             sql.append(" and CREATE_DATE=:createDate");             sql.setTimestamp("createDate", tRpgWgrbZdywlzrb.getCreateDate());          }   } if (tRpgWgrbZdywlzrb.getFlagKdDylj() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdDylj())) {             sql.append(" and KD_DYLJ is null ");          }      else{             sql.append(" and KD_DYLJ=:kdDylj");             sql.setLong("kdDylj", tRpgWgrbZdywlzrb.getKdDylj());          }   } if (tRpgWgrbZdywlzrb.getFlagKdRfz() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdRfz())) {             sql.append(" and KD_RFZ is null ");          }      else{             sql.append(" and KD_RFZ=:kdRfz");             sql.setLong("kdRfz", tRpgWgrbZdywlzrb.getKdRfz());          }   } if (tRpgWgrbZdywlzrb.getFlagKdSytqlj() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdSytqlj())) {             sql.append(" and KD_SYTQLJ is null ");          }      else{             sql.append(" and KD_SYTQLJ=:kdSytqlj");             sql.setLong("kdSytqlj", tRpgWgrbZdywlzrb.getKdSytqlj());          }   } if (tRpgWgrbZdywlzrb.getFlagKdZzs() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdZzs())) {             sql.append(" and KD_ZZS is null ");          }      else{             sql.append(" and KD_ZZS=:kdZzs");             sql.setLong("kdZzs", tRpgWgrbZdywlzrb.getKdZzs());          }   } if (tRpgWgrbZdywlzrb.getFlagOcs3gDylj() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gDylj())) {             sql.append(" and OCS3G_DYLJ is null ");          }      else{             sql.append(" and OCS3G_DYLJ=:ocs3gDylj");             sql.setLong("ocs3gDylj", tRpgWgrbZdywlzrb.getOcs3gDylj());          }   } if (tRpgWgrbZdywlzrb.getFlagOcs3gRfz() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gRfz())) {             sql.append(" and OCS3G_RFZ is null ");          }      else{             sql.append(" and OCS3G_RFZ=:ocs3gRfz");             sql.setLong("ocs3gRfz", tRpgWgrbZdywlzrb.getOcs3gRfz());          }   } if (tRpgWgrbZdywlzrb.getFlagOcs3gSytqlj() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gSytqlj())) {             sql.append(" and OCS3G_SYTQLJ is null ");          }      else{             sql.append(" and OCS3G_SYTQLJ=:ocs3gSytqlj");             sql.setLong("ocs3gSytqlj", tRpgWgrbZdywlzrb.getOcs3gSytqlj());          }   } if (tRpgWgrbZdywlzrb.getFlagOcs3gZzs() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gZzs())) {             sql.append(" and OCS3G_ZZS is null ");          }      else{             sql.append(" and OCS3G_ZZS=:ocs3gZzs");             sql.setLong("ocs3gZzs", tRpgWgrbZdywlzrb.getOcs3gZzs());          }   } if (tRpgWgrbZdywlzrb.getFlagOpenDate() == 1) {      if (tRpgWgrbZdywlzrb.getOpenDate() == null) {             sql.append(" and OPEN_DATE is null ");          }      else{             sql.append(" and OPEN_DATE=:openDate");             sql.setTimestamp("openDate", tRpgWgrbZdywlzrb.getOpenDate());          }   } if (tRpgWgrbZdywlzrb.getFlagPt2gDylj() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gDylj())) {             sql.append(" and PT2G_DYLJ is null ");          }      else{             sql.append(" and PT2G_DYLJ=:pt2gDylj");             sql.setLong("pt2gDylj", tRpgWgrbZdywlzrb.getPt2gDylj());          }   } if (tRpgWgrbZdywlzrb.getFlagPt2gRfz() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gRfz())) {             sql.append(" and PT2G_RFZ is null ");          }      else{             sql.append(" and PT2G_RFZ=:pt2gRfz");             sql.setLong("pt2gRfz", tRpgWgrbZdywlzrb.getPt2gRfz());          }   } if (tRpgWgrbZdywlzrb.getFlagPt2gSytqlj() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gSytqlj())) {             sql.append(" and PT2G_SYTQLJ is null ");          }      else{             sql.append(" and PT2G_SYTQLJ=:pt2gSytqlj");             sql.setLong("pt2gSytqlj", tRpgWgrbZdywlzrb.getPt2gSytqlj());          }   } if (tRpgWgrbZdywlzrb.getFlagPt2gZzs() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gZzs())) {             sql.append(" and PT2G_ZZS is null ");          }      else{             sql.append(" and PT2G_ZZS=:pt2gZzs");             sql.setLong("pt2gZzs", tRpgWgrbZdywlzrb.getPt2gZzs());          }   } if (tRpgWgrbZdywlzrb.getFlagPt3gDylj() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gDylj())) {             sql.append(" and PT3G_DYLJ is null ");          }      else{             sql.append(" and PT3G_DYLJ=:pt3gDylj");             sql.setLong("pt3gDylj", tRpgWgrbZdywlzrb.getPt3gDylj());          }   } if (tRpgWgrbZdywlzrb.getFlagPt3gRfz() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gRfz())) {             sql.append(" and PT3G_RFZ is null ");          }      else{             sql.append(" and PT3G_RFZ=:pt3gRfz");             sql.setLong("pt3gRfz", tRpgWgrbZdywlzrb.getPt3gRfz());          }   } if (tRpgWgrbZdywlzrb.getFlagPt3gSytqlj() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gSytqlj())) {             sql.append(" and PT3G_SYTQLJ is null ");          }      else{             sql.append(" and PT3G_SYTQLJ=:pt3gSytqlj");             sql.setLong("pt3gSytqlj", tRpgWgrbZdywlzrb.getPt3gSytqlj());          }   } if (tRpgWgrbZdywlzrb.getFlagPt3gZzs() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gZzs())) {             sql.append(" and PT3G_ZZS is null ");          }      else{             sql.append(" and PT3G_ZZS=:pt3gZzs");             sql.setLong("pt3gZzs", tRpgWgrbZdywlzrb.getPt3gZzs());          }   } if (tRpgWgrbZdywlzrb.getFlagWgCode() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getWgCode())) {             sql.append(" and WG_CODE is null ");          }      else{             sql.append(" and WG_CODE=:wgCode");             sql.setString("wgCode", tRpgWgrbZdywlzrb.getWgCode());          }   } if (tRpgWgrbZdywlzrb.getFlagWgMc() == 1) {      if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getWgMc())) {             sql.append(" and WG_MC is null ");          }      else{             sql.append(" and WG_MC=:wgMc");             sql.setString("wgMc", tRpgWgrbZdywlzrb.getWgMc());          }   }            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();                    while (rs.next()) {           tRpgWgrbZdywlzrb = new TRpgWgrbZdywlzrbSVO();           tRpgWgrbZdywlzrb.setCreateDate(rs.getTimestamp("CREATE_DATE"));           tRpgWgrbZdywlzrb.setKdDylj(rs.getString("KD_DYLJ"));           tRpgWgrbZdywlzrb.setKdRfz(rs.getString("KD_RFZ"));           tRpgWgrbZdywlzrb.setKdSytqlj(rs.getString("KD_SYTQLJ"));           tRpgWgrbZdywlzrb.setKdZzs(rs.getString("KD_ZZS"));           tRpgWgrbZdywlzrb.setOcs3gDylj(rs.getString("OCS3G_DYLJ"));           tRpgWgrbZdywlzrb.setOcs3gRfz(rs.getString("OCS3G_RFZ"));           tRpgWgrbZdywlzrb.setOcs3gSytqlj(rs.getString("OCS3G_SYTQLJ"));           tRpgWgrbZdywlzrb.setOcs3gZzs(rs.getString("OCS3G_ZZS"));           tRpgWgrbZdywlzrb.setOpenDate(rs.getTimestamp("OPEN_DATE"));           tRpgWgrbZdywlzrb.setPt2gDylj(rs.getString("PT2G_DYLJ"));           tRpgWgrbZdywlzrb.setPt2gRfz(rs.getString("PT2G_RFZ"));           tRpgWgrbZdywlzrb.setPt2gSytqlj(rs.getString("PT2G_SYTQLJ"));           tRpgWgrbZdywlzrb.setPt2gZzs(rs.getString("PT2G_ZZS"));           tRpgWgrbZdywlzrb.setPt3gDylj(rs.getString("PT3G_DYLJ"));           tRpgWgrbZdywlzrb.setPt3gRfz(rs.getString("PT3G_RFZ"));           tRpgWgrbZdywlzrb.setPt3gSytqlj(rs.getString("PT3G_SYTQLJ"));           tRpgWgrbZdywlzrb.setPt3gZzs(rs.getString("PT3G_ZZS"));           tRpgWgrbZdywlzrb.setWgCode(rs.getString("WG_CODE"));           tRpgWgrbZdywlzrb.setWgMc(rs.getString("WG_MC"));               res.add(tRpgWgrbZdywlzrb);                            }          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(rs,ps);               }                         if(0 == res.size()) res = null;          return res;   } /**   * 更新的SQL。   * @return String ： 更新的SQL。  */ public void update(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       TRpgWgrbZdywlzrbSVO tRpgWgrbZdywlzrb=(TRpgWgrbZdywlzrbSVO) vo;          Connection conn = null;          PreparedStatement ps = null;          Sql sql = new Sql("UPDATE T_RPG_WGRB_ZDYWLZRB SET ");     try {if (tRpgWgrbZdywlzrb.getFlagCreateDate() == 1) {sql.append("CREATE_DATE=:createDate,"); sql.setTimestamp("createDate", tRpgWgrbZdywlzrb.getCreateDate()); } if (tRpgWgrbZdywlzrb.getFlagKdDylj() == 1) {sql.append("KD_DYLJ=:kdDylj,");sql.setLong("kdDylj", tRpgWgrbZdywlzrb.getKdDylj()); } if (tRpgWgrbZdywlzrb.getFlagKdRfz() == 1) {sql.append("KD_RFZ=:kdRfz,");sql.setLong("kdRfz", tRpgWgrbZdywlzrb.getKdRfz()); } if (tRpgWgrbZdywlzrb.getFlagKdSytqlj() == 1) {sql.append("KD_SYTQLJ=:kdSytqlj,");sql.setLong("kdSytqlj", tRpgWgrbZdywlzrb.getKdSytqlj()); } if (tRpgWgrbZdywlzrb.getFlagKdZzs() == 1) {sql.append("KD_ZZS=:kdZzs,");sql.setLong("kdZzs", tRpgWgrbZdywlzrb.getKdZzs()); } if (tRpgWgrbZdywlzrb.getFlagOcs3gDylj() == 1) {sql.append("OCS3G_DYLJ=:ocs3gDylj,");sql.setLong("ocs3gDylj", tRpgWgrbZdywlzrb.getOcs3gDylj()); } if (tRpgWgrbZdywlzrb.getFlagOcs3gRfz() == 1) {sql.append("OCS3G_RFZ=:ocs3gRfz,");sql.setLong("ocs3gRfz", tRpgWgrbZdywlzrb.getOcs3gRfz()); } if (tRpgWgrbZdywlzrb.getFlagOcs3gSytqlj() == 1) {sql.append("OCS3G_SYTQLJ=:ocs3gSytqlj,");sql.setLong("ocs3gSytqlj", tRpgWgrbZdywlzrb.getOcs3gSytqlj()); } if (tRpgWgrbZdywlzrb.getFlagOcs3gZzs() == 1) {sql.append("OCS3G_ZZS=:ocs3gZzs,");sql.setLong("ocs3gZzs", tRpgWgrbZdywlzrb.getOcs3gZzs()); } if (tRpgWgrbZdywlzrb.getFlagOpenDate() == 1) {sql.append("OPEN_DATE=:openDate,"); sql.setTimestamp("openDate", tRpgWgrbZdywlzrb.getOpenDate()); } if (tRpgWgrbZdywlzrb.getFlagPt2gDylj() == 1) {sql.append("PT2G_DYLJ=:pt2gDylj,");sql.setLong("pt2gDylj", tRpgWgrbZdywlzrb.getPt2gDylj()); } if (tRpgWgrbZdywlzrb.getFlagPt2gRfz() == 1) {sql.append("PT2G_RFZ=:pt2gRfz,");sql.setLong("pt2gRfz", tRpgWgrbZdywlzrb.getPt2gRfz()); } if (tRpgWgrbZdywlzrb.getFlagPt2gSytqlj() == 1) {sql.append("PT2G_SYTQLJ=:pt2gSytqlj,");sql.setLong("pt2gSytqlj", tRpgWgrbZdywlzrb.getPt2gSytqlj()); } if (tRpgWgrbZdywlzrb.getFlagPt2gZzs() == 1) {sql.append("PT2G_ZZS=:pt2gZzs,");sql.setLong("pt2gZzs", tRpgWgrbZdywlzrb.getPt2gZzs()); } if (tRpgWgrbZdywlzrb.getFlagPt3gDylj() == 1) {sql.append("PT3G_DYLJ=:pt3gDylj,");sql.setLong("pt3gDylj", tRpgWgrbZdywlzrb.getPt3gDylj()); } if (tRpgWgrbZdywlzrb.getFlagPt3gRfz() == 1) {sql.append("PT3G_RFZ=:pt3gRfz,");sql.setLong("pt3gRfz", tRpgWgrbZdywlzrb.getPt3gRfz()); } if (tRpgWgrbZdywlzrb.getFlagPt3gSytqlj() == 1) {sql.append("PT3G_SYTQLJ=:pt3gSytqlj,");sql.setLong("pt3gSytqlj", tRpgWgrbZdywlzrb.getPt3gSytqlj()); } if (tRpgWgrbZdywlzrb.getFlagPt3gZzs() == 1) {sql.append("PT3G_ZZS=:pt3gZzs,");sql.setLong("pt3gZzs", tRpgWgrbZdywlzrb.getPt3gZzs()); } if (tRpgWgrbZdywlzrb.getFlagWgCode() == 1) {sql.append("WG_CODE=:wgCode,"); sql.setString("wgCode", tRpgWgrbZdywlzrb.getWgCode()); } if (tRpgWgrbZdywlzrb.getFlagWgMc() == 1) {sql.append("WG_MC=:wgMc,"); sql.setString("wgMc", tRpgWgrbZdywlzrb.getWgMc()); }            	sql.removeSuffix(1); sql.append(" WHERE 1=1 ");           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();                    } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(ps);               }                  } /**   * 批量增加记录。   * @return String ： 批量增加的SQL。  */ public void addBat(List list)throws AppException, SysException {     if (list == null) {     throw new AppException("100001", "缺少DAO操作对象！");           }          Connection conn = null;          PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO T_RPG_WGRB_ZDYWLZRB(CREATE_DATE,KD_DYLJ,KD_RFZ,KD_SYTQLJ,KD_ZZS,OCS3G_DYLJ,OCS3G_RFZ,OCS3G_SYTQLJ,OCS3G_ZZS,OPEN_DATE,PT2G_DYLJ,PT2G_RFZ,PT2G_SYTQLJ,PT2G_ZZS,PT3G_DYLJ,PT3G_RFZ,PT3G_SYTQLJ,PT3G_ZZS,WG_CODE,WG_MC)");sql.append(" VALUES (:createDate,:kdDylj,:kdRfz,:kdSytqlj,:kdZzs,:ocs3gDylj,:ocs3gRfz,:ocs3gSytqlj,:ocs3gZzs,:openDate,:pt2gDylj,:pt2gRfz,:pt2gSytqlj,:pt2gZzs,:pt3gDylj,:pt3gRfz,:pt3gSytqlj,:pt3gZzs,:wgCode,:wgMc)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());    for(int i=0;i<list.size();i++){       TRpgWgrbZdywlzrbSVO tRpgWgrbZdywlzrb=(TRpgWgrbZdywlzrbSVO) list.get(i);         if (tRpgWgrbZdywlzrb== null) {         throw new AppException("100001", "缺少DAO操作对象！");       }   if (tRpgWgrbZdywlzrb.getCreateDate() == null) {      sql.setNullDate("createDate");     } else {    sql.setTimestamp("createDate", tRpgWgrbZdywlzrb.getCreateDate());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdDylj())) {      sql.setNullLong("kdDylj");     } else {    sql.setLong("kdDylj", tRpgWgrbZdywlzrb.getKdDylj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdRfz())) {      sql.setNullLong("kdRfz");     } else {    sql.setLong("kdRfz", tRpgWgrbZdywlzrb.getKdRfz());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdSytqlj())) {      sql.setNullLong("kdSytqlj");     } else {    sql.setLong("kdSytqlj", tRpgWgrbZdywlzrb.getKdSytqlj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getKdZzs())) {      sql.setNullLong("kdZzs");     } else {    sql.setLong("kdZzs", tRpgWgrbZdywlzrb.getKdZzs());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gDylj())) {      sql.setNullLong("ocs3gDylj");     } else {    sql.setLong("ocs3gDylj", tRpgWgrbZdywlzrb.getOcs3gDylj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gRfz())) {      sql.setNullLong("ocs3gRfz");     } else {    sql.setLong("ocs3gRfz", tRpgWgrbZdywlzrb.getOcs3gRfz());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gSytqlj())) {      sql.setNullLong("ocs3gSytqlj");     } else {    sql.setLong("ocs3gSytqlj", tRpgWgrbZdywlzrb.getOcs3gSytqlj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getOcs3gZzs())) {      sql.setNullLong("ocs3gZzs");     } else {    sql.setLong("ocs3gZzs", tRpgWgrbZdywlzrb.getOcs3gZzs());    }    if (tRpgWgrbZdywlzrb.getOpenDate() == null) {      sql.setNullDate("openDate");     } else {    sql.setTimestamp("openDate", tRpgWgrbZdywlzrb.getOpenDate());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gDylj())) {      sql.setNullLong("pt2gDylj");     } else {    sql.setLong("pt2gDylj", tRpgWgrbZdywlzrb.getPt2gDylj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gRfz())) {      sql.setNullLong("pt2gRfz");     } else {    sql.setLong("pt2gRfz", tRpgWgrbZdywlzrb.getPt2gRfz());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gSytqlj())) {      sql.setNullLong("pt2gSytqlj");     } else {    sql.setLong("pt2gSytqlj", tRpgWgrbZdywlzrb.getPt2gSytqlj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt2gZzs())) {      sql.setNullLong("pt2gZzs");     } else {    sql.setLong("pt2gZzs", tRpgWgrbZdywlzrb.getPt2gZzs());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gDylj())) {      sql.setNullLong("pt3gDylj");     } else {    sql.setLong("pt3gDylj", tRpgWgrbZdywlzrb.getPt3gDylj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gRfz())) {      sql.setNullLong("pt3gRfz");     } else {    sql.setLong("pt3gRfz", tRpgWgrbZdywlzrb.getPt3gRfz());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gSytqlj())) {      sql.setNullLong("pt3gSytqlj");     } else {    sql.setLong("pt3gSytqlj", tRpgWgrbZdywlzrb.getPt3gSytqlj());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getPt3gZzs())) {      sql.setNullLong("pt3gZzs");     } else {    sql.setLong("pt3gZzs", tRpgWgrbZdywlzrb.getPt3gZzs());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getWgCode())) {      sql.setNullString("wgCode");     } else {    sql.setString("wgCode", tRpgWgrbZdywlzrb.getWgCode());    }       if (StringUtil.isBlank(tRpgWgrbZdywlzrb.getWgMc())) {      sql.setNullString("wgMc");     } else {    sql.setString("wgMc", tRpgWgrbZdywlzrb.getWgMc());    }            sql.fillParams(ps);           sql.log(this.getClass());           sql.clearParameters();           ps.addBatch();           }                  ps.executeBatch();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 根据传入参数删除一条或者一批记录。   * @return String ： 删除的SQL。  */ public void delete(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRpgWgrbZdywlzrbSVO tRpgWgrbZdywlzrb=(TRpgWgrbZdywlzrbSVO) vo;          Connection conn = null;          PreparedStatement ps = null;       Sql sql = new Sql("DELETE FROM T_RPG_WGRB_ZDYWLZRB WHERE 1=1  ");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();            } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(ps);           }         } /**   * 注销一条或者一批   * @return String ： 注销一条或者一批的SQL。  */ public void unable(GenericVO vo)throws AppException, SysException {     TRpgWgrbZdywlzrbSVO tRpgWgrbZdywlzrb=(TRpgWgrbZdywlzrbSVO) vo;       }}
