package com.cattsoft.tm.component.dao.oracleImpl;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.List;import java.util.ArrayList;import org.apache.log4j.Logger;import com.cattsoft.pub.connection.ConnectionFactory;import com.cattsoft.tm.component.dao.ITRptWgjlzdgzSDAO;import com.cattsoft.tm.vo.TRptWgjlzdgzSVO;import com.cattsoft.pub.util.JdbcUtil;import com.cattsoft.pub.dao.Sql;import com.cattsoft.pub.exception.AppException;import com.cattsoft.pub.exception.SysException;import com.cattsoft.pub.vo.GenericVO;import com.cattsoft.pub.util.StringUtil; /**   * 方法TRptWgjlzdgzSDAOImpl   * <p>Company: 大唐软件</p>   * @author ：白小亮。   * @version 1.1  2007-9-23  */public class TRptWgjlzdgzSDAOImpl implements ITRptWgjlzdgzSDAO{    private static Logger log = Logger.getLogger(TRptWgjlzdgzSDAOImpl.class);    private static final String UNABLE_STS = "P";  /**   * 增加。   * @return String  */ public void add(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRptWgjlzdgzSVO tRptWgjlzdgz=(TRptWgjlzdgzSVO) vo;      Connection conn = null;      PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO T_RPT_WGJLZDGZ(CREATE_DATE,OPEN_DATE,WGJLZDGZ_DTZ_2G,WGJLZDGZ_DTZ_3G,WGJLZDGZ_DTZ_GH,WGJLZDGZ_DTZ_KD,WGJLZDGZ_DYLJC_2G,WGJLZDGZ_DYLJC_3G,WGJLZDGZ_DYLJC_GH,WGJLZDGZ_DYLJC_KD,WGJLZDGZ_DYLJ_2G,WGJLZDGZ_DYLJ_3G,WGJLZDGZ_DYLJ_GH,WGJLZDGZ_DYLJ_KD,WGJLZDGZ_WGID,WGJLZDGZ_WGMC)");sql.append(" VALUES (:createDate,:openDate,:wgjlzdgzDtz2g,:wgjlzdgzDtz3g,:wgjlzdgzDtzGh,:wgjlzdgzDtzKd,:wgjlzdgzDyljc2g,:wgjlzdgzDyljc3g,:wgjlzdgzDyljcGh,:wgjlzdgzDyljcKd,:wgjlzdgzDylj2g,:wgjlzdgzDylj3g,:wgjlzdgzDyljGh,:wgjlzdgzDyljKd,:wgjlzdgzWgid,:wgjlzdgzWgmc)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());   if (tRptWgjlzdgz.getCreateDate() == null) {      sql.setNullDate("createDate");     } else {    sql.setTimestamp("createDate", tRptWgjlzdgz.getCreateDate());    }    if (tRptWgjlzdgz.getOpenDate() == null) {      sql.setNullDate("openDate");     } else {    sql.setTimestamp("openDate", tRptWgjlzdgz.getOpenDate());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtz2g())) {      sql.setNullLong("wgjlzdgzDtz2g");     } else {    sql.setLong("wgjlzdgzDtz2g", tRptWgjlzdgz.getWgjlzdgzDtz2g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtz3g())) {      sql.setNullLong("wgjlzdgzDtz3g");     } else {    sql.setLong("wgjlzdgzDtz3g", tRptWgjlzdgz.getWgjlzdgzDtz3g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtzGh())) {      sql.setNullLong("wgjlzdgzDtzGh");     } else {    sql.setLong("wgjlzdgzDtzGh", tRptWgjlzdgz.getWgjlzdgzDtzGh());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtzKd())) {      sql.setNullLong("wgjlzdgzDtzKd");     } else {    sql.setLong("wgjlzdgzDtzKd", tRptWgjlzdgz.getWgjlzdgzDtzKd());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljc2g())) {      sql.setNullLong("wgjlzdgzDyljc2g");     } else {    sql.setLong("wgjlzdgzDyljc2g", tRptWgjlzdgz.getWgjlzdgzDyljc2g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljc3g())) {      sql.setNullLong("wgjlzdgzDyljc3g");     } else {    sql.setLong("wgjlzdgzDyljc3g", tRptWgjlzdgz.getWgjlzdgzDyljc3g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljcGh())) {      sql.setNullLong("wgjlzdgzDyljcGh");     } else {    sql.setLong("wgjlzdgzDyljcGh", tRptWgjlzdgz.getWgjlzdgzDyljcGh());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljcKd())) {      sql.setNullLong("wgjlzdgzDyljcKd");     } else {    sql.setLong("wgjlzdgzDyljcKd", tRptWgjlzdgz.getWgjlzdgzDyljcKd());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDylj2g())) {      sql.setNullLong("wgjlzdgzDylj2g");     } else {    sql.setLong("wgjlzdgzDylj2g", tRptWgjlzdgz.getWgjlzdgzDylj2g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDylj3g())) {      sql.setNullLong("wgjlzdgzDylj3g");     } else {    sql.setLong("wgjlzdgzDylj3g", tRptWgjlzdgz.getWgjlzdgzDylj3g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljGh())) {      sql.setNullLong("wgjlzdgzDyljGh");     } else {    sql.setLong("wgjlzdgzDyljGh", tRptWgjlzdgz.getWgjlzdgzDyljGh());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljKd())) {      sql.setNullLong("wgjlzdgzDyljKd");     } else {    sql.setLong("wgjlzdgzDyljKd", tRptWgjlzdgz.getWgjlzdgzDyljKd());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzWgid())) {      sql.setNullString("wgjlzdgzWgid");     } else {    sql.setString("wgjlzdgzWgid", tRptWgjlzdgz.getWgjlzdgzWgid());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzWgmc())) {      sql.setNullString("wgjlzdgzWgmc");     } else {    sql.setString("wgjlzdgzWgmc", tRptWgjlzdgz.getWgjlzdgzWgmc());    }            sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 主键查询的SQL。   * @return String ： 主键查询的SQL。  */ public GenericVO findByPK(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRptWgjlzdgzSVO tRptWgjlzdgz=(TRptWgjlzdgzSVO) vo;       Sql sql = new Sql("SELECT CREATE_DATE,OPEN_DATE,WGJLZDGZ_DTZ_2G,WGJLZDGZ_DTZ_3G,WGJLZDGZ_DTZ_GH,WGJLZDGZ_DTZ_KD,WGJLZDGZ_DYLJC_2G,WGJLZDGZ_DYLJC_3G,WGJLZDGZ_DYLJC_GH,WGJLZDGZ_DYLJC_KD,WGJLZDGZ_DYLJ_2G,WGJLZDGZ_DYLJ_3G,WGJLZDGZ_DYLJ_GH,WGJLZDGZ_DYLJ_KD,WGJLZDGZ_WGID,WGJLZDGZ_WGMC FROM T_RPT_WGJLZDGZ WHERE 1=1  ");      Connection conn = null;      PreparedStatement ps = null;      ResultSet rs = null;      tRptWgjlzdgz =null;      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();            while (rs.next()) {           tRptWgjlzdgz = new TRptWgjlzdgzSVO();           tRptWgjlzdgz.setCreateDate(rs.getTimestamp("CREATE_DATE"));           tRptWgjlzdgz.setOpenDate(rs.getTimestamp("OPEN_DATE"));           tRptWgjlzdgz.setWgjlzdgzDtz2g(rs.getString("WGJLZDGZ_DTZ_2G"));           tRptWgjlzdgz.setWgjlzdgzDtz3g(rs.getString("WGJLZDGZ_DTZ_3G"));           tRptWgjlzdgz.setWgjlzdgzDtzGh(rs.getString("WGJLZDGZ_DTZ_GH"));           tRptWgjlzdgz.setWgjlzdgzDtzKd(rs.getString("WGJLZDGZ_DTZ_KD"));           tRptWgjlzdgz.setWgjlzdgzDyljc2g(rs.getString("WGJLZDGZ_DYLJC_2G"));           tRptWgjlzdgz.setWgjlzdgzDyljc3g(rs.getString("WGJLZDGZ_DYLJC_3G"));           tRptWgjlzdgz.setWgjlzdgzDyljcGh(rs.getString("WGJLZDGZ_DYLJC_GH"));           tRptWgjlzdgz.setWgjlzdgzDyljcKd(rs.getString("WGJLZDGZ_DYLJC_KD"));           tRptWgjlzdgz.setWgjlzdgzDylj2g(rs.getString("WGJLZDGZ_DYLJ_2G"));           tRptWgjlzdgz.setWgjlzdgzDylj3g(rs.getString("WGJLZDGZ_DYLJ_3G"));           tRptWgjlzdgz.setWgjlzdgzDyljGh(rs.getString("WGJLZDGZ_DYLJ_GH"));           tRptWgjlzdgz.setWgjlzdgzDyljKd(rs.getString("WGJLZDGZ_DYLJ_KD"));           tRptWgjlzdgz.setWgjlzdgzWgid(rs.getString("WGJLZDGZ_WGID"));           tRptWgjlzdgz.setWgjlzdgzWgmc(rs.getString("WGJLZDGZ_WGMC"));                 }           } catch (SQLException se) {             throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(rs,ps);           }           return tRptWgjlzdgz;         } /**   * 批量查询的SQL。   * @return String ： 批量查询的SQL。  */ public List findByVO(GenericVO vo) throws AppException, SysException{         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       TRptWgjlzdgzSVO tRptWgjlzdgz=(TRptWgjlzdgzSVO) vo;          List res = new ArrayList();          Connection conn = null;          PreparedStatement ps = null;          ResultSet rs = null;          Sql sql = new Sql("SELECT CREATE_DATE,OPEN_DATE,WGJLZDGZ_DTZ_2G,WGJLZDGZ_DTZ_3G,WGJLZDGZ_DTZ_GH,WGJLZDGZ_DTZ_KD,WGJLZDGZ_DYLJC_2G,WGJLZDGZ_DYLJC_3G,WGJLZDGZ_DYLJC_GH,WGJLZDGZ_DYLJC_KD,WGJLZDGZ_DYLJ_2G,WGJLZDGZ_DYLJ_3G,WGJLZDGZ_DYLJ_GH,WGJLZDGZ_DYLJ_KD,WGJLZDGZ_WGID,WGJLZDGZ_WGMC FROM T_RPT_WGJLZDGZ WHERE 1=1 ");     try {if (tRptWgjlzdgz.getFlagCreateDate() == 1) {      if (tRptWgjlzdgz.getCreateDate() == null) {             sql.append(" and CREATE_DATE is null ");          }      else{             sql.append(" and CREATE_DATE=:createDate");             sql.setTimestamp("createDate", tRptWgjlzdgz.getCreateDate());          }   } if (tRptWgjlzdgz.getFlagOpenDate() == 1) {      if (tRptWgjlzdgz.getOpenDate() == null) {             sql.append(" and OPEN_DATE is null ");          }      else{             sql.append(" and OPEN_DATE=:openDate");             sql.setTimestamp("openDate", tRptWgjlzdgz.getOpenDate());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDtz2g() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtz2g())) {             sql.append(" and WGJLZDGZ_DTZ_2G is null ");          }      else{             sql.append(" and WGJLZDGZ_DTZ_2G=:wgjlzdgzDtz2g");             sql.setLong("wgjlzdgzDtz2g", tRptWgjlzdgz.getWgjlzdgzDtz2g());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDtz3g() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtz3g())) {             sql.append(" and WGJLZDGZ_DTZ_3G is null ");          }      else{             sql.append(" and WGJLZDGZ_DTZ_3G=:wgjlzdgzDtz3g");             sql.setLong("wgjlzdgzDtz3g", tRptWgjlzdgz.getWgjlzdgzDtz3g());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDtzGh() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtzGh())) {             sql.append(" and WGJLZDGZ_DTZ_GH is null ");          }      else{             sql.append(" and WGJLZDGZ_DTZ_GH=:wgjlzdgzDtzGh");             sql.setLong("wgjlzdgzDtzGh", tRptWgjlzdgz.getWgjlzdgzDtzGh());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDtzKd() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtzKd())) {             sql.append(" and WGJLZDGZ_DTZ_KD is null ");          }      else{             sql.append(" and WGJLZDGZ_DTZ_KD=:wgjlzdgzDtzKd");             sql.setLong("wgjlzdgzDtzKd", tRptWgjlzdgz.getWgjlzdgzDtzKd());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljc2g() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljc2g())) {             sql.append(" and WGJLZDGZ_DYLJC_2G is null ");          }      else{             sql.append(" and WGJLZDGZ_DYLJC_2G=:wgjlzdgzDyljc2g");             sql.setLong("wgjlzdgzDyljc2g", tRptWgjlzdgz.getWgjlzdgzDyljc2g());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljc3g() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljc3g())) {             sql.append(" and WGJLZDGZ_DYLJC_3G is null ");          }      else{             sql.append(" and WGJLZDGZ_DYLJC_3G=:wgjlzdgzDyljc3g");             sql.setLong("wgjlzdgzDyljc3g", tRptWgjlzdgz.getWgjlzdgzDyljc3g());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljcGh() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljcGh())) {             sql.append(" and WGJLZDGZ_DYLJC_GH is null ");          }      else{             sql.append(" and WGJLZDGZ_DYLJC_GH=:wgjlzdgzDyljcGh");             sql.setLong("wgjlzdgzDyljcGh", tRptWgjlzdgz.getWgjlzdgzDyljcGh());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljcKd() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljcKd())) {             sql.append(" and WGJLZDGZ_DYLJC_KD is null ");          }      else{             sql.append(" and WGJLZDGZ_DYLJC_KD=:wgjlzdgzDyljcKd");             sql.setLong("wgjlzdgzDyljcKd", tRptWgjlzdgz.getWgjlzdgzDyljcKd());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDylj2g() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDylj2g())) {             sql.append(" and WGJLZDGZ_DYLJ_2G is null ");          }      else{             sql.append(" and WGJLZDGZ_DYLJ_2G=:wgjlzdgzDylj2g");             sql.setLong("wgjlzdgzDylj2g", tRptWgjlzdgz.getWgjlzdgzDylj2g());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDylj3g() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDylj3g())) {             sql.append(" and WGJLZDGZ_DYLJ_3G is null ");          }      else{             sql.append(" and WGJLZDGZ_DYLJ_3G=:wgjlzdgzDylj3g");             sql.setLong("wgjlzdgzDylj3g", tRptWgjlzdgz.getWgjlzdgzDylj3g());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljGh() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljGh())) {             sql.append(" and WGJLZDGZ_DYLJ_GH is null ");          }      else{             sql.append(" and WGJLZDGZ_DYLJ_GH=:wgjlzdgzDyljGh");             sql.setLong("wgjlzdgzDyljGh", tRptWgjlzdgz.getWgjlzdgzDyljGh());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljKd() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljKd())) {             sql.append(" and WGJLZDGZ_DYLJ_KD is null ");          }      else{             sql.append(" and WGJLZDGZ_DYLJ_KD=:wgjlzdgzDyljKd");             sql.setLong("wgjlzdgzDyljKd", tRptWgjlzdgz.getWgjlzdgzDyljKd());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzWgid() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzWgid())) {             sql.append(" and WGJLZDGZ_WGID is null ");          }      else{             sql.append(" and WGJLZDGZ_WGID=:wgjlzdgzWgid");             sql.setString("wgjlzdgzWgid", tRptWgjlzdgz.getWgjlzdgzWgid());          }   } if (tRptWgjlzdgz.getFlagWgjlzdgzWgmc() == 1) {      if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzWgmc())) {             sql.append(" and WGJLZDGZ_WGMC is null ");          }      else{             sql.append(" and WGJLZDGZ_WGMC=:wgjlzdgzWgmc");             sql.setString("wgjlzdgzWgmc", tRptWgjlzdgz.getWgjlzdgzWgmc());          }   }            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();                    while (rs.next()) {           tRptWgjlzdgz = new TRptWgjlzdgzSVO();           tRptWgjlzdgz.setCreateDate(rs.getTimestamp("CREATE_DATE"));           tRptWgjlzdgz.setOpenDate(rs.getTimestamp("OPEN_DATE"));           tRptWgjlzdgz.setWgjlzdgzDtz2g(rs.getString("WGJLZDGZ_DTZ_2G"));           tRptWgjlzdgz.setWgjlzdgzDtz3g(rs.getString("WGJLZDGZ_DTZ_3G"));           tRptWgjlzdgz.setWgjlzdgzDtzGh(rs.getString("WGJLZDGZ_DTZ_GH"));           tRptWgjlzdgz.setWgjlzdgzDtzKd(rs.getString("WGJLZDGZ_DTZ_KD"));           tRptWgjlzdgz.setWgjlzdgzDyljc2g(rs.getString("WGJLZDGZ_DYLJC_2G"));           tRptWgjlzdgz.setWgjlzdgzDyljc3g(rs.getString("WGJLZDGZ_DYLJC_3G"));           tRptWgjlzdgz.setWgjlzdgzDyljcGh(rs.getString("WGJLZDGZ_DYLJC_GH"));           tRptWgjlzdgz.setWgjlzdgzDyljcKd(rs.getString("WGJLZDGZ_DYLJC_KD"));           tRptWgjlzdgz.setWgjlzdgzDylj2g(rs.getString("WGJLZDGZ_DYLJ_2G"));           tRptWgjlzdgz.setWgjlzdgzDylj3g(rs.getString("WGJLZDGZ_DYLJ_3G"));           tRptWgjlzdgz.setWgjlzdgzDyljGh(rs.getString("WGJLZDGZ_DYLJ_GH"));           tRptWgjlzdgz.setWgjlzdgzDyljKd(rs.getString("WGJLZDGZ_DYLJ_KD"));           tRptWgjlzdgz.setWgjlzdgzWgid(rs.getString("WGJLZDGZ_WGID"));           tRptWgjlzdgz.setWgjlzdgzWgmc(rs.getString("WGJLZDGZ_WGMC"));               res.add(tRptWgjlzdgz);                            }          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(rs,ps);               }                         if(0 == res.size()) res = null;          return res;   } /**   * 更新的SQL。   * @return String ： 更新的SQL。  */ public void update(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       TRptWgjlzdgzSVO tRptWgjlzdgz=(TRptWgjlzdgzSVO) vo;          Connection conn = null;          PreparedStatement ps = null;          Sql sql = new Sql("UPDATE T_RPT_WGJLZDGZ SET ");     try {if (tRptWgjlzdgz.getFlagCreateDate() == 1) {sql.append("CREATE_DATE=:createDate,"); sql.setTimestamp("createDate", tRptWgjlzdgz.getCreateDate()); } if (tRptWgjlzdgz.getFlagOpenDate() == 1) {sql.append("OPEN_DATE=:openDate,"); sql.setTimestamp("openDate", tRptWgjlzdgz.getOpenDate()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDtz2g() == 1) {sql.append("WGJLZDGZ_DTZ_2G=:wgjlzdgzDtz2g,");sql.setLong("wgjlzdgzDtz2g", tRptWgjlzdgz.getWgjlzdgzDtz2g()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDtz3g() == 1) {sql.append("WGJLZDGZ_DTZ_3G=:wgjlzdgzDtz3g,");sql.setLong("wgjlzdgzDtz3g", tRptWgjlzdgz.getWgjlzdgzDtz3g()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDtzGh() == 1) {sql.append("WGJLZDGZ_DTZ_GH=:wgjlzdgzDtzGh,");sql.setLong("wgjlzdgzDtzGh", tRptWgjlzdgz.getWgjlzdgzDtzGh()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDtzKd() == 1) {sql.append("WGJLZDGZ_DTZ_KD=:wgjlzdgzDtzKd,");sql.setLong("wgjlzdgzDtzKd", tRptWgjlzdgz.getWgjlzdgzDtzKd()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljc2g() == 1) {sql.append("WGJLZDGZ_DYLJC_2G=:wgjlzdgzDyljc2g,");sql.setLong("wgjlzdgzDyljc2g", tRptWgjlzdgz.getWgjlzdgzDyljc2g()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljc3g() == 1) {sql.append("WGJLZDGZ_DYLJC_3G=:wgjlzdgzDyljc3g,");sql.setLong("wgjlzdgzDyljc3g", tRptWgjlzdgz.getWgjlzdgzDyljc3g()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljcGh() == 1) {sql.append("WGJLZDGZ_DYLJC_GH=:wgjlzdgzDyljcGh,");sql.setLong("wgjlzdgzDyljcGh", tRptWgjlzdgz.getWgjlzdgzDyljcGh()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljcKd() == 1) {sql.append("WGJLZDGZ_DYLJC_KD=:wgjlzdgzDyljcKd,");sql.setLong("wgjlzdgzDyljcKd", tRptWgjlzdgz.getWgjlzdgzDyljcKd()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDylj2g() == 1) {sql.append("WGJLZDGZ_DYLJ_2G=:wgjlzdgzDylj2g,");sql.setLong("wgjlzdgzDylj2g", tRptWgjlzdgz.getWgjlzdgzDylj2g()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDylj3g() == 1) {sql.append("WGJLZDGZ_DYLJ_3G=:wgjlzdgzDylj3g,");sql.setLong("wgjlzdgzDylj3g", tRptWgjlzdgz.getWgjlzdgzDylj3g()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljGh() == 1) {sql.append("WGJLZDGZ_DYLJ_GH=:wgjlzdgzDyljGh,");sql.setLong("wgjlzdgzDyljGh", tRptWgjlzdgz.getWgjlzdgzDyljGh()); } if (tRptWgjlzdgz.getFlagWgjlzdgzDyljKd() == 1) {sql.append("WGJLZDGZ_DYLJ_KD=:wgjlzdgzDyljKd,");sql.setLong("wgjlzdgzDyljKd", tRptWgjlzdgz.getWgjlzdgzDyljKd()); } if (tRptWgjlzdgz.getFlagWgjlzdgzWgid() == 1) {sql.append("WGJLZDGZ_WGID=:wgjlzdgzWgid,"); sql.setString("wgjlzdgzWgid", tRptWgjlzdgz.getWgjlzdgzWgid()); } if (tRptWgjlzdgz.getFlagWgjlzdgzWgmc() == 1) {sql.append("WGJLZDGZ_WGMC=:wgjlzdgzWgmc,"); sql.setString("wgjlzdgzWgmc", tRptWgjlzdgz.getWgjlzdgzWgmc()); }            	sql.removeSuffix(1); sql.append(" WHERE 1=1 ");           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();                    } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(ps);               }                  } /**   * 批量增加记录。   * @return String ： 批量增加的SQL。  */ public void addBat(List list)throws AppException, SysException {     if (list == null) {     throw new AppException("100001", "缺少DAO操作对象！");           }          Connection conn = null;          PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO T_RPT_WGJLZDGZ(CREATE_DATE,OPEN_DATE,WGJLZDGZ_DTZ_2G,WGJLZDGZ_DTZ_3G,WGJLZDGZ_DTZ_GH,WGJLZDGZ_DTZ_KD,WGJLZDGZ_DYLJC_2G,WGJLZDGZ_DYLJC_3G,WGJLZDGZ_DYLJC_GH,WGJLZDGZ_DYLJC_KD,WGJLZDGZ_DYLJ_2G,WGJLZDGZ_DYLJ_3G,WGJLZDGZ_DYLJ_GH,WGJLZDGZ_DYLJ_KD,WGJLZDGZ_WGID,WGJLZDGZ_WGMC)");sql.append(" VALUES (:createDate,:openDate,:wgjlzdgzDtz2g,:wgjlzdgzDtz3g,:wgjlzdgzDtzGh,:wgjlzdgzDtzKd,:wgjlzdgzDyljc2g,:wgjlzdgzDyljc3g,:wgjlzdgzDyljcGh,:wgjlzdgzDyljcKd,:wgjlzdgzDylj2g,:wgjlzdgzDylj3g,:wgjlzdgzDyljGh,:wgjlzdgzDyljKd,:wgjlzdgzWgid,:wgjlzdgzWgmc)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());    for(int i=0;i<list.size();i++){       TRptWgjlzdgzSVO tRptWgjlzdgz=(TRptWgjlzdgzSVO) list.get(i);         if (tRptWgjlzdgz== null) {         throw new AppException("100001", "缺少DAO操作对象！");       }   if (tRptWgjlzdgz.getCreateDate() == null) {      sql.setNullDate("createDate");     } else {    sql.setTimestamp("createDate", tRptWgjlzdgz.getCreateDate());    }    if (tRptWgjlzdgz.getOpenDate() == null) {      sql.setNullDate("openDate");     } else {    sql.setTimestamp("openDate", tRptWgjlzdgz.getOpenDate());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtz2g())) {      sql.setNullLong("wgjlzdgzDtz2g");     } else {    sql.setLong("wgjlzdgzDtz2g", tRptWgjlzdgz.getWgjlzdgzDtz2g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtz3g())) {      sql.setNullLong("wgjlzdgzDtz3g");     } else {    sql.setLong("wgjlzdgzDtz3g", tRptWgjlzdgz.getWgjlzdgzDtz3g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtzGh())) {      sql.setNullLong("wgjlzdgzDtzGh");     } else {    sql.setLong("wgjlzdgzDtzGh", tRptWgjlzdgz.getWgjlzdgzDtzGh());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDtzKd())) {      sql.setNullLong("wgjlzdgzDtzKd");     } else {    sql.setLong("wgjlzdgzDtzKd", tRptWgjlzdgz.getWgjlzdgzDtzKd());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljc2g())) {      sql.setNullLong("wgjlzdgzDyljc2g");     } else {    sql.setLong("wgjlzdgzDyljc2g", tRptWgjlzdgz.getWgjlzdgzDyljc2g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljc3g())) {      sql.setNullLong("wgjlzdgzDyljc3g");     } else {    sql.setLong("wgjlzdgzDyljc3g", tRptWgjlzdgz.getWgjlzdgzDyljc3g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljcGh())) {      sql.setNullLong("wgjlzdgzDyljcGh");     } else {    sql.setLong("wgjlzdgzDyljcGh", tRptWgjlzdgz.getWgjlzdgzDyljcGh());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljcKd())) {      sql.setNullLong("wgjlzdgzDyljcKd");     } else {    sql.setLong("wgjlzdgzDyljcKd", tRptWgjlzdgz.getWgjlzdgzDyljcKd());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDylj2g())) {      sql.setNullLong("wgjlzdgzDylj2g");     } else {    sql.setLong("wgjlzdgzDylj2g", tRptWgjlzdgz.getWgjlzdgzDylj2g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDylj3g())) {      sql.setNullLong("wgjlzdgzDylj3g");     } else {    sql.setLong("wgjlzdgzDylj3g", tRptWgjlzdgz.getWgjlzdgzDylj3g());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljGh())) {      sql.setNullLong("wgjlzdgzDyljGh");     } else {    sql.setLong("wgjlzdgzDyljGh", tRptWgjlzdgz.getWgjlzdgzDyljGh());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzDyljKd())) {      sql.setNullLong("wgjlzdgzDyljKd");     } else {    sql.setLong("wgjlzdgzDyljKd", tRptWgjlzdgz.getWgjlzdgzDyljKd());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzWgid())) {      sql.setNullString("wgjlzdgzWgid");     } else {    sql.setString("wgjlzdgzWgid", tRptWgjlzdgz.getWgjlzdgzWgid());    }       if (StringUtil.isBlank(tRptWgjlzdgz.getWgjlzdgzWgmc())) {      sql.setNullString("wgjlzdgzWgmc");     } else {    sql.setString("wgjlzdgzWgmc", tRptWgjlzdgz.getWgjlzdgzWgmc());    }            sql.fillParams(ps);           sql.log(this.getClass());           sql.clearParameters();           ps.addBatch();           }                  ps.executeBatch();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 根据传入参数删除一条或者一批记录。   * @return String ： 删除的SQL。  */ public void delete(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRptWgjlzdgzSVO tRptWgjlzdgz=(TRptWgjlzdgzSVO) vo;          Connection conn = null;          PreparedStatement ps = null;       Sql sql = new Sql("DELETE FROM T_RPT_WGJLZDGZ WHERE 1=1  ");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();            } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(ps);           }         } /**   * 注销一条或者一批   * @return String ： 注销一条或者一批的SQL。  */ public void unable(GenericVO vo)throws AppException, SysException {     TRptWgjlzdgzSVO tRptWgjlzdgz=(TRptWgjlzdgzSVO) vo;       }}
