package com.cattsoft.tm.component.dao.oracleImpl;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.List;import java.util.ArrayList;import org.apache.log4j.Logger;import com.cattsoft.pub.connection.ConnectionFactory;import com.cattsoft.tm.component.dao.ITRpt2g3grhrbSDAO;import com.cattsoft.tm.vo.TRpt2g3grhrbSVO;import com.cattsoft.pub.util.DateUtil;import com.cattsoft.pub.util.JdbcUtil;import com.cattsoft.pub.dao.Sql;import com.cattsoft.pub.exception.AppException;import com.cattsoft.pub.exception.SysException;import com.cattsoft.pub.vo.GenericVO;import com.cattsoft.pub.util.StringUtil; /**   * 方法TRpt2g3grhrbSDAOImpl   * <p>Company: 大唐软件</p>   * @author ：白小亮。   * @version 1.1  2007-9-23  */public class TRpt2g3grhrbSDAOImpl implements ITRpt2g3grhrbSDAO{    private static Logger log = Logger.getLogger(TRpt2g3grhrbSDAOImpl.class);    private static final String UNABLE_STS = "P";  /**   * 增加。   * @return String  */ public void add(GenericVO vo)throws AppException, SysException {	 } /**   * 主键查询的SQL。   * @return String ： 主键查询的SQL。  */ public GenericVO findByPK(GenericVO vo)throws AppException, SysException {	 return null;} /**   * 批量查询的SQL。   * @return String ： 批量查询的SQL。  */ public List findByVO(GenericVO vo) throws AppException, SysException{         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       TRpt2g3grhrbSVO tRpt2g3grhrb=(TRpt2g3grhrbSVO) vo;          List res = new ArrayList();          Connection conn = null;          PreparedStatement ps = null;          ResultSet rs = null;          Sql sql = new Sql("SELECT  RH_2G3G_SQ,RH_2G3G_RFZ,RH_2G3G_DYLJ,RH_2G3G_SYTQLJ,RH_2G3G_ZZS FROM T_RPT_2G3GRHRB WHERE 1=1 ");     try { if (tRpt2g3grhrb.getFlagOpenDate() == 1) {      if (tRpt2g3grhrb.getOpenDate() == null) {             sql.append(" and OPEN_DATE is null ");          }      else{    	  String strDate=DateUtil.date2Str(tRpt2g3grhrb.getOpenDate());             sql.append(" and to_char(OPEN_DATE,'yyyy-mm-dd')=:openDate");             sql.setString("openDate", strDate);          }   }            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();                    while (rs.next()) {           tRpt2g3grhrb = new TRpt2g3grhrbSVO();           tRpt2g3grhrb.setRh2g3gSq(rs.getString("RH_2G3G_SQ"));           tRpt2g3grhrb.setRh2g3gRfz(rs.getString("RH_2G3G_RFZ"));           tRpt2g3grhrb.setRh2g3gDylj(rs.getString("RH_2G3G_DYLJ"));           tRpt2g3grhrb.setRh2g3gsytqlj(rs.getString("RH_2G3G_SYTQLJ"));            tRpt2g3grhrb.setRh2g3gzzs(rs.getString("RH_2G3G_ZZS"));                    //  tRpt2g3grhrb.setCreateDate(rs.getTimestamp("CREATE_DATE"));          // tRpt2g3grhrb.setOpenDate(rs.getTimestamp("OPEN_DATE"));               res.add(tRpt2g3grhrb);                            }          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(rs,ps);               }                         if(0 == res.size()) res = null;          return res;   } /**   * 更新的SQL。   * @return String ： 更新的SQL。  */ public void update(GenericVO vo)throws AppException, SysException {} /**   * 批量增加记录。   * @return String ： 批量增加的SQL。  */ public void addBat(List list)throws AppException, SysException {} /**   * 根据传入参数删除一条或者一批记录。   * @return String ： 删除的SQL。  */ public void delete(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRpt2g3grhrbSVO tRpt2g3grhrb=(TRpt2g3grhrbSVO) vo;          Connection conn = null;          PreparedStatement ps = null;       Sql sql = new Sql("DELETE FROM T_RPT_2G3GRHRB WHERE 1=1  ");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();            } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(ps);           }         } /**   * 注销一条或者一批   * @return String ： 注销一条或者一批的SQL。  */ public void unable(GenericVO vo)throws AppException, SysException {     TRpt2g3grhrbSVO tRpt2g3grhrb=(TRpt2g3grhrbSVO) vo;       }}
