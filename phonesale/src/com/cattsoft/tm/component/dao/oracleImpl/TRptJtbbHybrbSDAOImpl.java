package com.cattsoft.tm.component.dao.oracleImpl;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.List;import java.util.ArrayList;import org.apache.log4j.Logger;import com.cattsoft.pub.connection.ConnectionFactory;import com.cattsoft.tm.component.dao.ITRptJtbbHybrbSDAO;import com.cattsoft.tm.vo.TRptJtbbHybrbSVO;import com.cattsoft.pub.util.JdbcUtil;import com.cattsoft.pub.dao.Sql;import com.cattsoft.pub.exception.AppException;import com.cattsoft.pub.exception.SysException;import com.cattsoft.pub.vo.GenericVO;import com.cattsoft.pub.util.StringUtil; /**   * 方法TRptJtbbHybrbSDAOImpl   * <p>Company: 大唐软件</p>   * @author ：白小亮。   * @version 1.1  2007-9-23  */public class TRptJtbbHybrbSDAOImpl implements ITRptJtbbHybrbSDAO{    private static Logger log = Logger.getLogger(TRptJtbbHybrbSDAOImpl.class);    private static final String UNABLE_STS = "P";  /**   * 增加。   * @return String  */ public void add(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRptJtbbHybrbSVO tRptJtbbHybrb=(TRptJtbbHybrbSVO) vo;      Connection conn = null;      PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO T_RPT_JTBB_HYBRB(CREATE_DATE,GX_RFZ,GX_YLJ,GX_YLJC,HYB_PQ,OPEN_DATE,RH_2G_RFZ,RH_2G_SYTQLJ,RH_2G_YLJ,RH_2G_ZZS,RH_3G_RFZ,RH_3G_SYTQLJ,RH_3G_YLJ,RH_3G_ZZS,WY_RFZ,WY_YLJ,WY_YLJC)");sql.append(" VALUES (:createDate,:gxRfz,:gxYlj,:gxYljc,:hybPq,:openDate,:rh2gRfz,:rh2gSytqlj,:rh2gYlj,:rh2gZzs,:rh3gRfz,:rh3gSytqlj,:rh3gYlj,:rh3gZzs,:wyRfz,:wyYlj,:wyYljc)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());   if (tRptJtbbHybrb.getCreateDate() == null) {      sql.setNullDate("createDate");     } else {    sql.setTimestamp("createDate", tRptJtbbHybrb.getCreateDate());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getGxRfz())) {      sql.setNullLong("gxRfz");     } else {    sql.setLong("gxRfz", tRptJtbbHybrb.getGxRfz());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getGxYlj())) {      sql.setNullLong("gxYlj");     } else {    sql.setLong("gxYlj", tRptJtbbHybrb.getGxYlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getGxYljc())) {      sql.setNullLong("gxYljc");     } else {    sql.setLong("gxYljc", tRptJtbbHybrb.getGxYljc());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getHybPq())) {      sql.setNullString("hybPq");     } else {    sql.setString("hybPq", tRptJtbbHybrb.getHybPq());    }    if (tRptJtbbHybrb.getOpenDate() == null) {      sql.setNullDate("openDate");     } else {    sql.setTimestamp("openDate", tRptJtbbHybrb.getOpenDate());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gRfz())) {      sql.setNullLong("rh2gRfz");     } else {    sql.setLong("rh2gRfz", tRptJtbbHybrb.getRh2gRfz());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gSytqlj())) {      sql.setNullLong("rh2gSytqlj");     } else {    sql.setLong("rh2gSytqlj", tRptJtbbHybrb.getRh2gSytqlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gYlj())) {      sql.setNullLong("rh2gYlj");     } else {    sql.setLong("rh2gYlj", tRptJtbbHybrb.getRh2gYlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gZzs())) {      sql.setNullLong("rh2gZzs");     } else {    sql.setLong("rh2gZzs", tRptJtbbHybrb.getRh2gZzs());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gRfz())) {      sql.setNullLong("rh3gRfz");     } else {    sql.setLong("rh3gRfz", tRptJtbbHybrb.getRh3gRfz());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gSytqlj())) {      sql.setNullLong("rh3gSytqlj");     } else {    sql.setLong("rh3gSytqlj", tRptJtbbHybrb.getRh3gSytqlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gYlj())) {      sql.setNullLong("rh3gYlj");     } else {    sql.setLong("rh3gYlj", tRptJtbbHybrb.getRh3gYlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gZzs())) {      sql.setNullLong("rh3gZzs");     } else {    sql.setLong("rh3gZzs", tRptJtbbHybrb.getRh3gZzs());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getWyRfz())) {      sql.setNullLong("wyRfz");     } else {    sql.setLong("wyRfz", tRptJtbbHybrb.getWyRfz());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getWyYlj())) {      sql.setNullLong("wyYlj");     } else {    sql.setLong("wyYlj", tRptJtbbHybrb.getWyYlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getWyYljc())) {      sql.setNullLong("wyYljc");     } else {    sql.setLong("wyYljc", tRptJtbbHybrb.getWyYljc());    }            sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 主键查询的SQL。   * @return String ： 主键查询的SQL。  */ public GenericVO findByPK(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRptJtbbHybrbSVO tRptJtbbHybrb=(TRptJtbbHybrbSVO) vo;       Sql sql = new Sql("SELECT CREATE_DATE,GX_RFZ,GX_YLJ,GX_YLJC,HYB_PQ,OPEN_DATE,RH_2G_RFZ,RH_2G_SYTQLJ,RH_2G_YLJ,RH_2G_ZZS,RH_3G_RFZ,RH_3G_SYTQLJ,RH_3G_YLJ,RH_3G_ZZS,WY_RFZ,WY_YLJ,WY_YLJC FROM T_RPT_JTBB_HYBRB WHERE 1=1  ");      Connection conn = null;      PreparedStatement ps = null;      ResultSet rs = null;      tRptJtbbHybrb =null;      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();            while (rs.next()) {           tRptJtbbHybrb = new TRptJtbbHybrbSVO();           tRptJtbbHybrb.setCreateDate(rs.getTimestamp("CREATE_DATE"));           tRptJtbbHybrb.setGxRfz(rs.getString("GX_RFZ"));           tRptJtbbHybrb.setGxYlj(rs.getString("GX_YLJ"));           tRptJtbbHybrb.setGxYljc(rs.getString("GX_YLJC"));           tRptJtbbHybrb.setHybPq(rs.getString("HYB_PQ"));           tRptJtbbHybrb.setOpenDate(rs.getTimestamp("OPEN_DATE"));           tRptJtbbHybrb.setRh2gRfz(rs.getString("RH_2G_RFZ"));           tRptJtbbHybrb.setRh2gSytqlj(rs.getString("RH_2G_SYTQLJ"));           tRptJtbbHybrb.setRh2gYlj(rs.getString("RH_2G_YLJ"));           tRptJtbbHybrb.setRh2gZzs(rs.getString("RH_2G_ZZS"));           tRptJtbbHybrb.setRh3gRfz(rs.getString("RH_3G_RFZ"));           tRptJtbbHybrb.setRh3gSytqlj(rs.getString("RH_3G_SYTQLJ"));           tRptJtbbHybrb.setRh3gYlj(rs.getString("RH_3G_YLJ"));           tRptJtbbHybrb.setRh3gZzs(rs.getString("RH_3G_ZZS"));           tRptJtbbHybrb.setWyRfz(rs.getString("WY_RFZ"));           tRptJtbbHybrb.setWyYlj(rs.getString("WY_YLJ"));           tRptJtbbHybrb.setWyYljc(rs.getString("WY_YLJC"));                 }           } catch (SQLException se) {             throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(rs,ps);           }           return tRptJtbbHybrb;         } /**   * 批量查询的SQL。   * @return String ： 批量查询的SQL。  */ public List findByVO(GenericVO vo) throws AppException, SysException{         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       TRptJtbbHybrbSVO tRptJtbbHybrb=(TRptJtbbHybrbSVO) vo;          List res = new ArrayList();          Connection conn = null;          PreparedStatement ps = null;          ResultSet rs = null;          Sql sql = new Sql("SELECT CREATE_DATE,GX_RFZ,GX_YLJ,GX_YLJC,HYB_PQ,OPEN_DATE,RH_2G_RFZ,RH_2G_SYTQLJ,RH_2G_YLJ,RH_2G_ZZS,RH_3G_RFZ,RH_3G_SYTQLJ,RH_3G_YLJ,RH_3G_ZZS,WY_RFZ,WY_YLJ,WY_YLJC FROM T_RPT_JTBB_HYBRB WHERE 1=1 ");     try {if (tRptJtbbHybrb.getFlagCreateDate() == 1) {      if (tRptJtbbHybrb.getCreateDate() == null) {             sql.append(" and CREATE_DATE is null ");          }      else{             sql.append(" and CREATE_DATE=:createDate");             sql.setTimestamp("createDate", tRptJtbbHybrb.getCreateDate());          }   } if (tRptJtbbHybrb.getFlagGxRfz() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getGxRfz())) {             sql.append(" and GX_RFZ is null ");          }      else{             sql.append(" and GX_RFZ=:gxRfz");             sql.setLong("gxRfz", tRptJtbbHybrb.getGxRfz());          }   } if (tRptJtbbHybrb.getFlagGxYlj() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getGxYlj())) {             sql.append(" and GX_YLJ is null ");          }      else{             sql.append(" and GX_YLJ=:gxYlj");             sql.setLong("gxYlj", tRptJtbbHybrb.getGxYlj());          }   } if (tRptJtbbHybrb.getFlagGxYljc() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getGxYljc())) {             sql.append(" and GX_YLJC is null ");          }      else{             sql.append(" and GX_YLJC=:gxYljc");             sql.setLong("gxYljc", tRptJtbbHybrb.getGxYljc());          }   } if (tRptJtbbHybrb.getFlagHybPq() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getHybPq())) {             sql.append(" and HYB_PQ is null ");          }      else{             sql.append(" and HYB_PQ=:hybPq");             sql.setString("hybPq", tRptJtbbHybrb.getHybPq());          }   } if (tRptJtbbHybrb.getFlagOpenDate() == 1) {      if (tRptJtbbHybrb.getOpenDate() == null) {             sql.append(" and OPEN_DATE is null ");          }      else{             sql.append(" and OPEN_DATE=:openDate");             sql.setTimestamp("openDate", tRptJtbbHybrb.getOpenDate());          }   } if (tRptJtbbHybrb.getFlagRh2gRfz() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gRfz())) {             sql.append(" and RH_2G_RFZ is null ");          }      else{             sql.append(" and RH_2G_RFZ=:rh2gRfz");             sql.setLong("rh2gRfz", tRptJtbbHybrb.getRh2gRfz());          }   } if (tRptJtbbHybrb.getFlagRh2gSytqlj() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gSytqlj())) {             sql.append(" and RH_2G_SYTQLJ is null ");          }      else{             sql.append(" and RH_2G_SYTQLJ=:rh2gSytqlj");             sql.setLong("rh2gSytqlj", tRptJtbbHybrb.getRh2gSytqlj());          }   } if (tRptJtbbHybrb.getFlagRh2gYlj() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gYlj())) {             sql.append(" and RH_2G_YLJ is null ");          }      else{             sql.append(" and RH_2G_YLJ=:rh2gYlj");             sql.setLong("rh2gYlj", tRptJtbbHybrb.getRh2gYlj());          }   } if (tRptJtbbHybrb.getFlagRh2gZzs() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gZzs())) {             sql.append(" and RH_2G_ZZS is null ");          }      else{             sql.append(" and RH_2G_ZZS=:rh2gZzs");             sql.setLong("rh2gZzs", tRptJtbbHybrb.getRh2gZzs());          }   } if (tRptJtbbHybrb.getFlagRh3gRfz() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gRfz())) {             sql.append(" and RH_3G_RFZ is null ");          }      else{             sql.append(" and RH_3G_RFZ=:rh3gRfz");             sql.setLong("rh3gRfz", tRptJtbbHybrb.getRh3gRfz());          }   } if (tRptJtbbHybrb.getFlagRh3gSytqlj() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gSytqlj())) {             sql.append(" and RH_3G_SYTQLJ is null ");          }      else{             sql.append(" and RH_3G_SYTQLJ=:rh3gSytqlj");             sql.setLong("rh3gSytqlj", tRptJtbbHybrb.getRh3gSytqlj());          }   } if (tRptJtbbHybrb.getFlagRh3gYlj() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gYlj())) {             sql.append(" and RH_3G_YLJ is null ");          }      else{             sql.append(" and RH_3G_YLJ=:rh3gYlj");             sql.setLong("rh3gYlj", tRptJtbbHybrb.getRh3gYlj());          }   } if (tRptJtbbHybrb.getFlagRh3gZzs() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gZzs())) {             sql.append(" and RH_3G_ZZS is null ");          }      else{             sql.append(" and RH_3G_ZZS=:rh3gZzs");             sql.setLong("rh3gZzs", tRptJtbbHybrb.getRh3gZzs());          }   } if (tRptJtbbHybrb.getFlagWyRfz() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getWyRfz())) {             sql.append(" and WY_RFZ is null ");          }      else{             sql.append(" and WY_RFZ=:wyRfz");             sql.setLong("wyRfz", tRptJtbbHybrb.getWyRfz());          }   } if (tRptJtbbHybrb.getFlagWyYlj() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getWyYlj())) {             sql.append(" and WY_YLJ is null ");          }      else{             sql.append(" and WY_YLJ=:wyYlj");             sql.setLong("wyYlj", tRptJtbbHybrb.getWyYlj());          }   } if (tRptJtbbHybrb.getFlagWyYljc() == 1) {      if (StringUtil.isBlank(tRptJtbbHybrb.getWyYljc())) {             sql.append(" and WY_YLJC is null ");          }      else{             sql.append(" and WY_YLJC=:wyYljc");             sql.setLong("wyYljc", tRptJtbbHybrb.getWyYljc());          }   }            conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           rs = ps.executeQuery();                    while (rs.next()) {           tRptJtbbHybrb = new TRptJtbbHybrbSVO();           tRptJtbbHybrb.setCreateDate(rs.getTimestamp("CREATE_DATE"));           tRptJtbbHybrb.setGxRfz(rs.getString("GX_RFZ"));           tRptJtbbHybrb.setGxYlj(rs.getString("GX_YLJ"));           tRptJtbbHybrb.setGxYljc(rs.getString("GX_YLJC"));           tRptJtbbHybrb.setHybPq(rs.getString("HYB_PQ"));           tRptJtbbHybrb.setOpenDate(rs.getTimestamp("OPEN_DATE"));           tRptJtbbHybrb.setRh2gRfz(rs.getString("RH_2G_RFZ"));           tRptJtbbHybrb.setRh2gSytqlj(rs.getString("RH_2G_SYTQLJ"));           tRptJtbbHybrb.setRh2gYlj(rs.getString("RH_2G_YLJ"));           tRptJtbbHybrb.setRh2gZzs(rs.getString("RH_2G_ZZS"));           tRptJtbbHybrb.setRh3gRfz(rs.getString("RH_3G_RFZ"));           tRptJtbbHybrb.setRh3gSytqlj(rs.getString("RH_3G_SYTQLJ"));           tRptJtbbHybrb.setRh3gYlj(rs.getString("RH_3G_YLJ"));           tRptJtbbHybrb.setRh3gZzs(rs.getString("RH_3G_ZZS"));           tRptJtbbHybrb.setWyRfz(rs.getString("WY_RFZ"));           tRptJtbbHybrb.setWyYlj(rs.getString("WY_YLJ"));           tRptJtbbHybrb.setWyYljc(rs.getString("WY_YLJC"));               res.add(tRptJtbbHybrb);                            }          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(rs,ps);               }                         if(0 == res.size()) res = null;          return res;   } /**   * 更新的SQL。   * @return String ： 更新的SQL。  */ public void update(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }       TRptJtbbHybrbSVO tRptJtbbHybrb=(TRptJtbbHybrbSVO) vo;          Connection conn = null;          PreparedStatement ps = null;          Sql sql = new Sql("UPDATE T_RPT_JTBB_HYBRB SET ");     try {if (tRptJtbbHybrb.getFlagCreateDate() == 1) {sql.append("CREATE_DATE=:createDate,"); sql.setTimestamp("createDate", tRptJtbbHybrb.getCreateDate()); } if (tRptJtbbHybrb.getFlagGxRfz() == 1) {sql.append("GX_RFZ=:gxRfz,");sql.setLong("gxRfz", tRptJtbbHybrb.getGxRfz()); } if (tRptJtbbHybrb.getFlagGxYlj() == 1) {sql.append("GX_YLJ=:gxYlj,");sql.setLong("gxYlj", tRptJtbbHybrb.getGxYlj()); } if (tRptJtbbHybrb.getFlagGxYljc() == 1) {sql.append("GX_YLJC=:gxYljc,");sql.setLong("gxYljc", tRptJtbbHybrb.getGxYljc()); } if (tRptJtbbHybrb.getFlagHybPq() == 1) {sql.append("HYB_PQ=:hybPq,"); sql.setString("hybPq", tRptJtbbHybrb.getHybPq()); } if (tRptJtbbHybrb.getFlagOpenDate() == 1) {sql.append("OPEN_DATE=:openDate,"); sql.setTimestamp("openDate", tRptJtbbHybrb.getOpenDate()); } if (tRptJtbbHybrb.getFlagRh2gRfz() == 1) {sql.append("RH_2G_RFZ=:rh2gRfz,");sql.setLong("rh2gRfz", tRptJtbbHybrb.getRh2gRfz()); } if (tRptJtbbHybrb.getFlagRh2gSytqlj() == 1) {sql.append("RH_2G_SYTQLJ=:rh2gSytqlj,");sql.setLong("rh2gSytqlj", tRptJtbbHybrb.getRh2gSytqlj()); } if (tRptJtbbHybrb.getFlagRh2gYlj() == 1) {sql.append("RH_2G_YLJ=:rh2gYlj,");sql.setLong("rh2gYlj", tRptJtbbHybrb.getRh2gYlj()); } if (tRptJtbbHybrb.getFlagRh2gZzs() == 1) {sql.append("RH_2G_ZZS=:rh2gZzs,");sql.setLong("rh2gZzs", tRptJtbbHybrb.getRh2gZzs()); } if (tRptJtbbHybrb.getFlagRh3gRfz() == 1) {sql.append("RH_3G_RFZ=:rh3gRfz,");sql.setLong("rh3gRfz", tRptJtbbHybrb.getRh3gRfz()); } if (tRptJtbbHybrb.getFlagRh3gSytqlj() == 1) {sql.append("RH_3G_SYTQLJ=:rh3gSytqlj,");sql.setLong("rh3gSytqlj", tRptJtbbHybrb.getRh3gSytqlj()); } if (tRptJtbbHybrb.getFlagRh3gYlj() == 1) {sql.append("RH_3G_YLJ=:rh3gYlj,");sql.setLong("rh3gYlj", tRptJtbbHybrb.getRh3gYlj()); } if (tRptJtbbHybrb.getFlagRh3gZzs() == 1) {sql.append("RH_3G_ZZS=:rh3gZzs,");sql.setLong("rh3gZzs", tRptJtbbHybrb.getRh3gZzs()); } if (tRptJtbbHybrb.getFlagWyRfz() == 1) {sql.append("WY_RFZ=:wyRfz,");sql.setLong("wyRfz", tRptJtbbHybrb.getWyRfz()); } if (tRptJtbbHybrb.getFlagWyYlj() == 1) {sql.append("WY_YLJ=:wyYlj,");sql.setLong("wyYlj", tRptJtbbHybrb.getWyYlj()); } if (tRptJtbbHybrb.getFlagWyYljc() == 1) {sql.append("WY_YLJC=:wyYljc,");sql.setLong("wyYljc", tRptJtbbHybrb.getWyYljc()); }            	sql.removeSuffix(1); sql.append(" WHERE 1=1 ");           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           ps = sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();                    } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);            } finally {                JdbcUtil.close(ps);               }                  } /**   * 批量增加记录。   * @return String ： 批量增加的SQL。  */ public void addBat(List list)throws AppException, SysException {     if (list == null) {     throw new AppException("100001", "缺少DAO操作对象！");           }          Connection conn = null;          PreparedStatement ps = null;Sql sql = new Sql("INSERT INTO T_RPT_JTBB_HYBRB(CREATE_DATE,GX_RFZ,GX_YLJ,GX_YLJC,HYB_PQ,OPEN_DATE,RH_2G_RFZ,RH_2G_SYTQLJ,RH_2G_YLJ,RH_2G_ZZS,RH_3G_RFZ,RH_3G_SYTQLJ,RH_3G_YLJ,RH_3G_ZZS,WY_RFZ,WY_YLJ,WY_YLJC)");sql.append(" VALUES (:createDate,:gxRfz,:gxYlj,:gxYljc,:hybPq,:openDate,:rh2gRfz,:rh2gSytqlj,:rh2gYlj,:rh2gZzs,:rh3gRfz,:rh3gSytqlj,:rh3gYlj,:rh3gZzs,:wyRfz,:wyYlj,:wyYljc)");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());    for(int i=0;i<list.size();i++){       TRptJtbbHybrbSVO tRptJtbbHybrb=(TRptJtbbHybrbSVO) list.get(i);         if (tRptJtbbHybrb== null) {         throw new AppException("100001", "缺少DAO操作对象！");       }   if (tRptJtbbHybrb.getCreateDate() == null) {      sql.setNullDate("createDate");     } else {    sql.setTimestamp("createDate", tRptJtbbHybrb.getCreateDate());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getGxRfz())) {      sql.setNullLong("gxRfz");     } else {    sql.setLong("gxRfz", tRptJtbbHybrb.getGxRfz());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getGxYlj())) {      sql.setNullLong("gxYlj");     } else {    sql.setLong("gxYlj", tRptJtbbHybrb.getGxYlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getGxYljc())) {      sql.setNullLong("gxYljc");     } else {    sql.setLong("gxYljc", tRptJtbbHybrb.getGxYljc());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getHybPq())) {      sql.setNullString("hybPq");     } else {    sql.setString("hybPq", tRptJtbbHybrb.getHybPq());    }    if (tRptJtbbHybrb.getOpenDate() == null) {      sql.setNullDate("openDate");     } else {    sql.setTimestamp("openDate", tRptJtbbHybrb.getOpenDate());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gRfz())) {      sql.setNullLong("rh2gRfz");     } else {    sql.setLong("rh2gRfz", tRptJtbbHybrb.getRh2gRfz());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gSytqlj())) {      sql.setNullLong("rh2gSytqlj");     } else {    sql.setLong("rh2gSytqlj", tRptJtbbHybrb.getRh2gSytqlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gYlj())) {      sql.setNullLong("rh2gYlj");     } else {    sql.setLong("rh2gYlj", tRptJtbbHybrb.getRh2gYlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh2gZzs())) {      sql.setNullLong("rh2gZzs");     } else {    sql.setLong("rh2gZzs", tRptJtbbHybrb.getRh2gZzs());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gRfz())) {      sql.setNullLong("rh3gRfz");     } else {    sql.setLong("rh3gRfz", tRptJtbbHybrb.getRh3gRfz());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gSytqlj())) {      sql.setNullLong("rh3gSytqlj");     } else {    sql.setLong("rh3gSytqlj", tRptJtbbHybrb.getRh3gSytqlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gYlj())) {      sql.setNullLong("rh3gYlj");     } else {    sql.setLong("rh3gYlj", tRptJtbbHybrb.getRh3gYlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getRh3gZzs())) {      sql.setNullLong("rh3gZzs");     } else {    sql.setLong("rh3gZzs", tRptJtbbHybrb.getRh3gZzs());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getWyRfz())) {      sql.setNullLong("wyRfz");     } else {    sql.setLong("wyRfz", tRptJtbbHybrb.getWyRfz());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getWyYlj())) {      sql.setNullLong("wyYlj");     } else {    sql.setLong("wyYlj", tRptJtbbHybrb.getWyYlj());    }       if (StringUtil.isBlank(tRptJtbbHybrb.getWyYljc())) {      sql.setNullLong("wyYljc");     } else {    sql.setLong("wyYljc", tRptJtbbHybrb.getWyYljc());    }            sql.fillParams(ps);           sql.log(this.getClass());           sql.clearParameters();           ps.addBatch();           }                  ps.executeBatch();          } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);           } finally {                    JdbcUtil.close(ps);           }  } /**   * 根据传入参数删除一条或者一批记录。   * @return String ： 删除的SQL。  */ public void delete(GenericVO vo)throws AppException, SysException {         if (vo== null) {         throw new AppException("100001", "缺少DAO操作对象！");        }     TRptJtbbHybrbSVO tRptJtbbHybrb=(TRptJtbbHybrbSVO) vo;          Connection conn = null;          PreparedStatement ps = null;       Sql sql = new Sql("DELETE FROM T_RPT_JTBB_HYBRB WHERE 1=1  ");      try {           conn = ConnectionFactory.getConnection();           ps = conn.prepareStatement(sql.getSql());           sql.fillParams(ps);           sql.log(this.getClass());           ps.executeUpdate();            } catch (SQLException se) {           throw new SysException("100003", "JDBC操作异常！", se);                      } finally {                    JdbcUtil.close(ps);           }         } /**   * 注销一条或者一批   * @return String ： 注销一条或者一批的SQL。  */ public void unable(GenericVO vo)throws AppException, SysException {     TRptJtbbHybrbSVO tRptJtbbHybrb=(TRptJtbbHybrbSVO) vo;       }}
